<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>初次架設Hexo+github紀錄:建立屬於自己的Blog吧!</title>
    <url>/hexo/20210705/2185937872/</url>
    <content><![CDATA[<p>剛接觸程式不久，想要有一個紀錄學習筆記的地方，於是決定藉此機會建立一個部落格。<br>既然都要建部落格了，當然要給自己一個挑戰啊!<br>經過上網爬文後，選了一個給程式菜雞些微難度的Hexo，一個網誌框架。<br>官網上表示Hexo快速、簡單且強大(對菜雞而言還是有挑戰的…<br>即使已經參閱過無數個他人的成功經驗，架設Hexo之路依然顛頗…<br>總之這篇文章十分適合給沒什麼程式基礎的人看!</p>
<span id="more"></span>

<p><strong>本文在Window10 x64環境下架設</strong><br><strong>Hexo版本: 5.4.0，Hexo-cli版本: 4.3.0，NexT版本:7.7.2</strong></p>
<h2 id="準備工作"><a href="#準備工作" class="headerlink" title="準備工作"></a><font color=#FFA07A>準備工作</font></h2><ul>
<li>了解CMD(Window:命令提示字元/Mac:終端機)的基本指令</li>
<li>看得懂最基本的目錄(directory)和路徑(path)</li>
<li>認識Git, Github，並註冊一個 <a href="https://github.com/">Github帳號</a> </li>
<li>安裝好<a href="https://git-scm.com/downloads">Git</a> 以及<a href="https://nodejs.org/en/">Node.js</a></li>
<li>有一個文字編輯器，例如<a href="https://notepad-plus-plus.org/downloads/">notepad++</a>，<a href="https://www.sublimetext.com/download">sublime text</a>，或是<a href="https://code.visualstudio.com/">VSCode</a></li>
</ul>
<p>這邊推薦給給大家這位大大寫的<a href="https://lnpcd.blogspot.com/2012/07/05.html">cmd基本指令</a> ，我想初學者也能看懂<br>這裡給像我這樣的新手一個建議，平時就要整理好下載的軟件。<br>像我自己是在筆電分割出D槽，並把自己的檔案和下載的軟件分類儲存在D槽，僅供參考。</p>
<h2 id="架設過程"><a href="#架設過程" class="headerlink" title="架設過程"></a><font color=#FFA07A>架設過程</font></h2><h3 id="Step1-前往Github並建立一個新的repository數據庫"><a href="#Step1-前往Github並建立一個新的repository數據庫" class="headerlink" title="Step1 前往Github並建立一個新的repository數據庫"></a><font color=#FFA07A>Step1 前往Github並建立一個新的repository數據庫</font></h3><p>登入你的Github帳號，進入頁面後，視窗右上角的頭像隔壁有一個”+”，點下去並再點”New repository”。</p>
<img src="/hexo/20210705/2185937872/first-post(1).jpg" class="">


<p>進入以下頁面後，在”Repository name”那欄輸入”github_user_name.github.io”，然後選”Public”即可，底下的選項不用選。<br><strong><font color=#FF0000>注意:</font></strong> <font color=#FF0000>“Repository name”那欄要輸入你的”github用戶名稱.github.io”，不然之後會發生錯誤</font></p>
<img src="/hexo/20210705/2185937872/first-post(2).jpg" class="">

<h3 id="Step2-安裝並建立Hexo"><a href="#Step2-安裝並建立Hexo" class="headerlink" title="Step2 安裝並建立Hexo"></a><font color=#FFA07A>Step2 安裝並建立Hexo</font></h3><p>打開命令提示字元，並輸入以下指令:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ npm install hexo-cli -g</span><br></pre></td></tr></table></figure>

<p>如同我在準備工作提到的:整理好自己的各種檔案，所以接下來要建立的部落格資料夾你要存在哪裡呢?<br>我自己是存在D磁碟的根目錄(root directory)下，所以我在命令提示字元安裝好Hexo後，接著輸入”d:”，如此就切換到D槽了(在命令提示字元裡，大小寫無所謂)<br>建議不要將部落格建在資料夾內。</p>
<p>接下來建立Hexo，輸入以下:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo init 部落格資料夾名稱</span><br></pre></td></tr></table></figure>
<p>如果建立成功會出現 <font color=#008000>INFO</font> Start blogging with Hexo!<br>接著為了進入到剛剛建立好的部落格資料夾，並安裝npm相關套件，所以輸入:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ <span class="built_in">cd</span> 部落格資料夾名稱</span><br><span class="line"><span class="comment">#change directory shorts for cd</span></span><br><span class="line"></span><br><span class="line">$ npm install</span><br><span class="line"><span class="comment">#安裝npm相關套件</span></span><br></pre></td></tr></table></figure>
<p>接著啟動Hexo，輸入:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo server</span><br><span class="line"><span class="comment">#其實也可以輸入hexo s </span></span><br></pre></td></tr></table></figure>
<p>點開跑出來的網址，會出現以下畫面</p>
<img src="/hexo/20210705/2185937872/first-post(3).jpg" class="">

<p>但看到這個畫面還不是終點喔!<br>因為我們現在看到的這個畫面是透過虛擬伺服器啟動的，還要連結到github!</p>
<h3 id="Step3-部署Github"><a href="#Step3-部署Github" class="headerlink" title="Step3 部署Github"></a><font color=#FFA07A>Step3 部署Github</font></h3><p>打開命令提示字元，輸入以下指令安裝git部屬套件:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure>

<p>接著打開習慣使用的文字編輯器(我是用notepad++；更:現已改成VSCode)，並打開在部落格資料夾中的_config.yml檔。<br>打開_config.yml檔後，修改110~113行資訊</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">deploy:</span><br><span class="line">  <span class="built_in">type</span>: git</span><br><span class="line">  repo: <span class="comment">#你的repository連結，格式:https://github.com/github用戶名稱/github用戶名稱.github.io.git</span></span><br><span class="line">  branch: master</span><br></pre></td></tr></table></figure>
<p>修改5~19行的基本資訊</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Site</span></span><br><span class="line">title: <span class="comment">#部落格名稱</span></span><br><span class="line">subtitle: <span class="comment">#副標題</span></span><br><span class="line">description: <span class="comment">#介紹網站</span></span><br><span class="line">keywords: <span class="comment">#網站關鍵字</span></span><br><span class="line">author: <span class="comment">#作者(你)名字或暱稱</span></span><br><span class="line">language: zh-TW <span class="comment">#使用語言，預設是en(英文)</span></span><br><span class="line">timezone: Asia/Taipei <span class="comment">#所在時區</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># URL</span></span><br><span class="line"><span class="comment">## Set your site url here. For example, if you use GitHub Page, set url as &#x27;https://username.github.io/project&#x27;</span></span><br><span class="line">url: http://github用戶名稱.github.io.com</span><br><span class="line">root: /</span><br><span class="line">permalink: :category/:year:month:day/:abbrlink/ <span class="comment">#:year/:month/:day/:title/</span></span><br><span class="line">permalink_defaults:</span><br></pre></td></tr></table></figure>
<p><strong><font color=#FF0000>注意:</font></strong> <font color=#FF0000>_config.yml很注重冒號後面一定要空一格</font></p>
<h3 id="Step4-調整及部署"><a href="#Step4-調整及部署" class="headerlink" title="Step4 調整及部署"></a><font color=#FFA07A>Step4 調整及部署</font></h3><p>更動設定後，回到CMD命令提示字元輸入以下指令:(以後每一次更動設定也是如此)</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo clean <span class="comment">#清除快取檔案 (db.json) 和已產生的靜態檔案 (public)。</span></span><br><span class="line">$ hexo g     <span class="comment">#generate，產生靜態檔案</span></span><br><span class="line"></span><br><span class="line">$ hexo s     <span class="comment">#server，如果不想先在本機上檢查或進行微調，可以直接輸入下一行指令</span></span><br><span class="line"></span><br><span class="line">$ hexo d     <span class="comment">#deploy，部署網站</span></span><br></pre></td></tr></table></figure>

<p>我個人之後在每次更動後，都直接輸入這個指令:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo g -d  <span class="comment">#產生靜態檔案後即部署網站</span></span><br></pre></td></tr></table></figure>

<p>如果命令提示字元跑完，也沒有錯誤發生的話，那恭喜你架設完成啦!<br>輸入 <a href="https://github用戶名稱.github.io/">https://github用戶名稱.github.io/</a> ，看看你的部落格長什麼樣子吧!</p>
<hr>
<p>初次架設時，就是在最後這步摔了一跤…<br>第一次發生錯誤是因為當時在github建立新的repository時，名稱沒有輸入自己的用戶名。<br>在發現是用戶名的問題前，又重新架設碰壁了幾次…<br>總之發現問題後，重新架設一遍，又是在這步卡關，我的cmd出現”fatal: unable to auto-detect email address”<br>上網查了下，發現了某位大大的解決辦法:<br>進入部落格目錄的 .deploy_git.git 子目錄，找到config檔並用文字編輯器打開。<br>打開後加入以下資訊:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[user]</span><br><span class="line">	email=<span class="comment">#輸入你註冊github的email</span></span><br><span class="line">	name=<span class="comment">#github用戶名稱</span></span><br></pre></td></tr></table></figure>
<hr>
<h3 id="Step5-更換主題-optional"><a href="#Step5-更換主題-optional" class="headerlink" title="Step5 更換主題(optional)"></a><font color=#FFA07A>Step5 更換主題(optional)</font></h3><p>Hexo有很多主題可以選擇，可以去<a href="https://hexo.io/themes/">官網</a> 上看看。<br>Hexo預設的主題是landscape，其實要不要更換主題看個人喜好。<br>我這次選擇的是許多人都推薦的NexT，推薦主因是其功能齊全，有markdown語法。<br>一樣，開啟cmd，切換到部落格資料夾所在位置</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ <span class="built_in">cd</span> 部落格資料夾名稱</span><br><span class="line"></span><br><span class="line">$ git <span class="built_in">clone</span> https://github.com/theme-next/hexo-theme-next themes/next</span><br><span class="line"><span class="comment">#下載NexT主題</span></span><br></pre></td></tr></table></figure>
<p>下載完主題後，到主程式的_config.yml檔，修改theme的資訊:(覺得行數好多可以ctrl+F尋找)</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">theme: next <span class="comment">#要更換的主題名稱</span></span><br></pre></td></tr></table></figure>

<h3 id="Step6-建立一篇新的文章"><a href="#Step6-建立一篇新的文章" class="headerlink" title="Step6 建立一篇新的文章"></a><font color=#FFA07A>Step6 建立一篇新的文章</font></h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo new [layout] &lt;title&gt; </span><br><span class="line"><span class="comment">#layout預設是post；title盡量輸入英文</span></span><br></pre></td></tr></table></figure>
<p>輸入完以上指令後，到”部落格資料夾\source_posts”，就可以找到你剛剛建立的文章開始編輯囉!</p>
<h2 id="結論"><a href="#結論" class="headerlink" title="結論"></a><font color=#FFA07A>結論</font></h2><p>其實Hexo以及NexT主題還有許多可以更改的部分，想要知道更多玩法的話，網路上兩者的相關文章也很多。在這裡推薦Ray大大寫的<a href="https://hsiangfeng.github.io/categories/hexo/">Hexo相關文章</a> ，我的部落格設定有蠻多都是從他的網站上學習的!</p>
<h2 id="References"><a href="#References" class="headerlink" title="References"></a><font color=#FFA07A>References</font></h2><ul>
<li><a href="https://hsiangfeng.github.io/hexo/20190411/932826160/">https://hsiangfeng.github.io/hexo/20190411/932826160/</a></li>
<li><a href="https://hackmd.io/@king87515/Sy16ckymU">https://hackmd.io/@king87515/Sy16ckymU</a></li>
<li><a href="https://ithelp.ithome.com.tw/articles/10207725">https://ithelp.ithome.com.tw/articles/10207725</a></li>
<li><a href="https://blog.csdn.net/nineya_com/article/details/103301870">https://blog.csdn.net/nineya_com/article/details/103301870</a></li>
</ul>
]]></content>
      <categories>
        <category>Hexo</category>
      </categories>
      <tags>
        <tag>hexo</tag>
      </tags>
  </entry>
  <entry>
    <title>空間資訊在學什麼?</title>
    <url>/chat/20210709/1815532527/</url>
    <content><![CDATA[<p>這篇文章適合給想考空間資訊相關科系的高中生或大學生參考~<br>在這篇文章你可以看到: <font color=#C53761><strong>空間資訊會修的課程</strong></font>以及我對於<font color=#C53761><strong>目前修過課程之心得</strong></font>。<br><strong>以下是個人分析，僅供參考；確切資訊還請搜尋該科系網址或是寫email詢問助教</strong></p>
<p>不知道有多少人跟我一樣，在高中時對地理十分有興趣想了解地理資訊(GIS)相關資訊。<br>但google後得到的資訊實在頗少…應該說是可以學到空間資訊這個技術的大學不算太少，可是他們的科系名稱和教學重心都不大相同…</p>
<span id="more"></span>
<p>像是成大的測量及空間資訊學系、逢甲的土地管理學系、台大地理系的地理資訊組、政大地政系的土地測量與資訊組、北大不動產與城鄉管理學系…其實真的不算少。<br>至於上述舉例的五個系，到底該選擇何者就讀，或許你可以參考我的文章看看。</p>
<hr>
<h2 id="四所大學之空間資訊相關科系之科目表"><a href="#四所大學之空間資訊相關科系之科目表" class="headerlink" title="四所大學之空間資訊相關科系之科目表"></a><font color=#FFA07A>四所大學之空間資訊相關科系之科目表</font></h2><table>
<thead>
<tr>
<th></th>
<th>成大測量及空間資訊學系</th>
<th>政大地政系的土地測量與資訊組</th>
<th>逢甲土地管理學系</th>
<th>台大地理系的地理資訊組</th>
</tr>
</thead>
<tbody><tr>
<td>微積分</td>
<td>O</td>
<td>O</td>
<td>O</td>
<td>O</td>
</tr>
<tr>
<td>統計學</td>
<td>O</td>
<td>O</td>
<td>O</td>
<td>O</td>
</tr>
<tr>
<td>程式設計</td>
<td>O</td>
<td>O</td>
<td>O</td>
<td>O</td>
</tr>
<tr>
<td>地理資訊系統</td>
<td>O</td>
<td>O</td>
<td>O</td>
<td>O</td>
</tr>
<tr>
<td>測量學及實習</td>
<td>O</td>
<td>O</td>
<td>O</td>
<td>O(選修)</td>
</tr>
<tr>
<td>地圖學</td>
<td>O</td>
<td>O</td>
<td>X</td>
<td>O</td>
</tr>
<tr>
<td>航測與遙測</td>
<td>O</td>
<td>O</td>
<td>X</td>
<td>O</td>
</tr>
<tr>
<td>民法</td>
<td>O(選修)</td>
<td>O</td>
<td>O</td>
<td>X</td>
</tr>
<tr>
<td>土地法</td>
<td>O(選修)</td>
<td>O</td>
<td>O</td>
<td>X</td>
</tr>
<tr>
<td>測量平差</td>
<td>O</td>
<td>O</td>
<td>O(選修)</td>
<td>X</td>
</tr>
<tr>
<td>遙感探測</td>
<td>O</td>
<td>O</td>
<td>O(選修)</td>
<td>X</td>
</tr>
<tr>
<td>衛星定位</td>
<td>O</td>
<td>O</td>
<td>O(選修)</td>
<td>X</td>
</tr>
<tr>
<td>線性代數</td>
<td>O</td>
<td>O</td>
<td>X</td>
<td>O(選修)</td>
</tr>
<tr>
<td>空間資料相關</td>
<td>O(選修)</td>
<td>O</td>
<td>X</td>
<td>O</td>
</tr>
<tr>
<td>大地測量</td>
<td>O</td>
<td>O</td>
<td>X</td>
<td>X</td>
</tr>
<tr>
<td>土地政策</td>
<td>X</td>
<td>O</td>
<td>O</td>
<td>X</td>
</tr>
<tr>
<td>攝影測量學</td>
<td>O</td>
<td>O(選修)</td>
<td>X</td>
<td>X</td>
</tr>
<tr>
<td>經濟學</td>
<td>X</td>
<td>O(選修)</td>
<td>O</td>
<td>X</td>
</tr>
<tr>
<td>土地稅</td>
<td>X</td>
<td>O(選修)</td>
<td>O</td>
<td>X</td>
</tr>
<tr>
<td>土地登記</td>
<td>X</td>
<td>O(選修)</td>
<td>O</td>
<td>X</td>
</tr>
<tr>
<td>不動產估價</td>
<td>X</td>
<td>O(選修)</td>
<td>O</td>
<td>X</td>
</tr>
<tr>
<td>土地經濟學</td>
<td>X</td>
<td>O(選修)</td>
<td>O</td>
<td>X</td>
</tr>
<tr>
<td>土地使用管制</td>
<td>X</td>
<td>O(選修)</td>
<td>O</td>
<td>X</td>
</tr>
<tr>
<td>地籍測量</td>
<td>X</td>
<td>O</td>
<td>O(選修)</td>
<td>X</td>
</tr>
<tr>
<td>普通物理學</td>
<td>O</td>
<td>X</td>
<td>X</td>
<td>X</td>
</tr>
<tr>
<td>土地管理概論</td>
<td>X</td>
<td>X</td>
<td>O</td>
<td>X</td>
</tr>
<tr>
<td>地理學通論</td>
<td>X</td>
<td>X</td>
<td>X</td>
<td>O</td>
</tr>
<tr>
<td>地形學</td>
<td>X</td>
<td>X</td>
<td>X</td>
<td>O</td>
</tr>
<tr>
<td>氣候學</td>
<td>X</td>
<td>X</td>
<td>X</td>
<td>O</td>
</tr>
<tr>
<td>資料結構與演算法</td>
<td>X</td>
<td>X</td>
<td>X</td>
<td>O(選修)</td>
</tr>
</tbody></table>
<ul>
<li>課程名稱不同學校會有些落差，若有錯誤還請多指教!</li>
</ul>
<p>從這張表格可以發現不論這四個系的教學重心為何，<font color=#C53761>微積分</font>、<font color=#C53761>統計學</font>、<font color=#C53761>程式設計</font>、<font color=#C53761>地理資訊系統</font>和<font color=#C53761>測量學及實習</font>都是一定會遇到的科目。所以對於有可能就讀此科系的你們，可以去上網看看這五堂課程的內容，或是去聽聽看網路上的一些相關教學影片，如果聽了不到一小時就聽不下去，甚至還因此減低你的學習意願，那你可能大一上課會很痛苦了。<br>成大測量涵蓋完整的空間資訊課程，再加上隸屬於工學院，個人覺得有些部分會比較偏向工程類型的測量。<br>政大地政測組其實整體必修課程與成大測量沒有相差很多，不過可能因為隸屬社會科學院，所以會多修一些經濟相關的課程。<br>逢甲土管雖然也有提供空間資訊課程，但大部分都在選修，個人認為重心還是放在經濟、土地的管理與使用，如同系名”土地管理”。<br>台大地理選課其實挺自由的，必修相較其他三者不多，而它的地理資訊組就真的很專注在學習GIS這塊，遙感探測和衛星定位就沒有出現在課程規劃裡。如果是想修完整空間資訊課程的你，可能要稍微考慮一下自己的需求到底是什麼了。</p>
<h2 id="已修過課程之心得"><a href="#已修過課程之心得" class="headerlink" title="已修過課程之心得"></a><font color=#FFA07A>已修過課程之心得</font></h2><h3 id="微積分"><a href="#微積分" class="headerlink" title="* 微積分"></a><font color=#FFA07A>* 微積分</font></h3><p>大學的微積分有分兩種: 一種是商用微積分；令一種是工程數學微積分。如果讀空間資訊相關科系，我想應該都是修工程數學微積分，總之就是比前者難就對了。乾鹿高中是社會組…所以一開始接觸微積分覺得頗吃力。我自己微積分蠻多都是記公式，還有要多練題。不過至少微積分是一科你努力，基本上會有收穫的科目，大學有些科目是你即使努力，結果還是慘烈的…</p>
<h3 id="統計學"><a href="#統計學" class="headerlink" title="* 統計學"></a><font color=#FFA07A>* 統計學</font></h3><p>統計學基本上就是上學期帶你認識統計圖表以及一些基本的分配(distributions)；下學期則是學估計、假設檢定、Anova Table還有一些迴歸基本概念。統計學整體而言的學習還挺愉快的，也不會給人太大的負擔。上課專心聽講弄清楚觀念，下課後大概花2~3小時寫作業，期中/期末考前在複習應該就差不多了。</p>
<h3 id="線性代數"><a href="#線性代數" class="headerlink" title="* 線性代數"></a><font color=#FFA07A>* 線性代數</font></h3><p>裡面有很多矩陣、向量、以及很多很多的證明。其實我學了一整年也不是很了解線性代數到底是什麼…總覺得似懂非懂。大一學的線性代數算是小boss級科目吧! 總之你會發現身邊有些同學很有慧根，完全跟的上上課內容。</p>
<h3 id="測量學"><a href="#測量學" class="headerlink" title="* 測量學"></a><font color=#FFA07A>* 測量學</font></h3><p>測量學是空間資訊中的基本科目，所以很像在學空間資訊的這一學科的”目錄”。先讓你對之後學的東西有一個基礎的概念。實習課的內容基本上是實際操作儀器進行測量，回到教室後再計算誤差是否有在容許範圍內。我那一學期有做過距離測量、間接水準測量、水平角測量以及導線測量。這堂課有些人會覺得辛苦，是因為除了背器材(而且要保護好，像全站儀一台要十幾萬…)，還要面臨大太陽颳風下雨的可能。總之我是挺喜歡這堂課，也覺得實習課可以操作儀器測量很好玩。</p>
<h3 id="計算機程式設計"><a href="#計算機程式設計" class="headerlink" title="* 計算機程式設計"></a><font color=#FFA07A>* 計算機程式設計</font></h3><p>我非常喜歡的一堂課! 前幾堂課是補充計算機概論的基本知識還有一些html的語法，不過主要是教Python的語法，為了銜接之後要學習的地理資訊系統。每個學校的計算機程式設計教的程式語言可能會有不同，但我覺得都可以好好學習，個人認為這個科目挺重要的。乾鹿本身在修這堂課的同時，也有去外面參加Python讀書會，現在也是持續自學中，所以才架設這個部落格放學習筆記XD </p>
<h3 id="民法概要"><a href="#民法概要" class="headerlink" title="* 民法概要"></a><font color=#FFA07A>* 民法概要</font></h3><p>通常民法、民法概要的老師，因為知道修這堂課的學生大多是非法律系專業學生，所以上課或考試都不會太難。乾鹿在上這堂課時，通常是上課認真聽講，在上課期間就想辦法聽懂，這樣回去不用花太多時間複習，只要在期中考前複習一次就差不多了。而且民法概要這堂課比想像中有趣，會發現原來我們的生活中，有許多行為與民法息息相關。</p>
<h3 id="測量平差法"><a href="#測量平差法" class="headerlink" title="* 測量平差法"></a><font color=#FFA07A>* 測量平差法</font></h3><p>在外業觀測得到的觀測值一定存在誤差，需要進行調整，求得測量對象的最佳估計值的理論和方法，就是測量平差法。這堂課會用到一些微積分和統計學。在這堂課學到誤差傳播理論，會時常出現在課程裡。乾鹿在這堂課也是上課就專心聽講，把觀念聽懂。不過下課後的作業會需要花比較多時間練習，而且需要複習一下上課內容。</p>
<h2 id="出路"><a href="#出路" class="headerlink" title="出路"></a><font color=#FFA07A>出路</font></h2><p>我目前也沒有真的搞清楚出路，上網查私部門職缺相較其他職業沒有那麼多。而且系上老師不知為何時常介紹我們考公務員這個選項(?)其實系上轉系或雙主修的人偏多，可能在台灣空間資訊目前的發展還不夠大吧…?<br>總之有聽過學長姊畢業後考公務員(測量製圖科)、或是就職於工程顧問公司和地理資訊公司等。</p>
<h2 id="小結"><a href="#小結" class="headerlink" title="小結"></a><font color=#FFA07A>小結</font></h2><p>想特別提醒一點: 在國高中時對地理課有興趣，<strong>不一定</strong>代表喜歡或適合讀地理系或空間資訊相關科系喔!!!<br>選擇一個學校和科系，除了興趣和合適度之外，還有許多需要考量的像是住宿交通學校資源等，不過在討論下去就會與此次主題偏題了。</p>
]]></content>
      <categories>
        <category>閒聊</category>
      </categories>
      <tags>
        <tag>GIS</tag>
        <tag>求學心得</tag>
      </tags>
  </entry>
  <entry>
    <title>3C產品標示容量為什麼和實際上不一樣?</title>
    <url>/CS-everywhere/20210724/975940166/</url>
    <content><![CDATA[<p>“我的筆電規格，容量明明標示256GB，為什麼實際上只有236GB?!”<br>相信有些人一定會有這個疑問吧! 那麼就來一探究竟吧!<br>在這篇文章你可以看到: <font color=#C53761><strong>如何得知筆電/電腦的基本規格</strong></font>以及<font color=#C53761><strong>為何廠商標示容量與實際不同</strong></font>。</p>
<span id="more"></span>
<p><strong>本文在Window10 x64環境下操作</strong></p>
<hr>
<h2 id="如何得知筆電-電腦的基本規格"><a href="#如何得知筆電-電腦的基本規格" class="headerlink" title="如何得知筆電/電腦的基本規格"></a><font color=#FFA07A>如何得知筆電/電腦的基本規格</font></h2><p>P.s.要查詢容量請直接看法三和法四。</p>
<h3 id="法一-檢視系統中的”關於”"><a href="#法一-檢視系統中的”關於”" class="headerlink" title="法一: 檢視系統中的”關於”"></a><font color=#FFA07A>法一: 檢視系統中的”關於”</font></h3><p>首先點擊左下角的微軟符號(或是點鍵盤上Ctrl和Alt之間的Windows鍵)，接著按設定(其符號為齒輪，在電源上方)，就會進入以下畫面。</p>
<img src="/CS-everywhere/20210724/975940166/cs-everywhere-2.jpg" class="">
<p>接著再點擊左上角的”系統”。<br>進入下個畫面後，至左列那一排滑到最下方，看到”關於”即可點擊，此時你就可以看到自己筆電/電腦的裝置規格和Windows規格了。</p>
<h3 id="法二-檢視電腦中的基本資訊"><a href="#法二-檢視電腦中的基本資訊" class="headerlink" title="法二: 檢視電腦中的基本資訊"></a><font color=#FFA07A>法二: 檢視電腦中的基本資訊</font></h3><p>法三步驟比法二更少。<br>首先到電腦中的”本機”，點擊滑鼠右鍵，再點擊最下方的”內容”就結束囉，也是可以看到跟法一差不多的筆電/電腦的裝置規格和Windows規格。</p>
<img src="/CS-everywhere/20210724/975940166/cs-everywhere-1.jpg" class="">
<hr>
<p>不過法一和法二依然沒能看到容量啊! 所以我們就來到法三和法四了~</p>
<h3 id="法三-計算本機磁碟的空間大小"><a href="#法三-計算本機磁碟的空間大小" class="headerlink" title="法三: 計算本機磁碟的空間大小"></a><font color=#FFA07A>法三: 計算本機磁碟的空間大小</font></h3><p><strong><font color=#FF0000>注意:</font></strong> <font color=#FF0000>法三只是幫你看個大概容量，並不精準喔!</font><br>首先到電腦中的”本機”，下滑到裝置與磁碟機區域。<br>把本機磁碟的”大小總計”那一欄相加即可。以下方圖片舉例，它的總空間大小是236.7GB(164GB+72.7GB)。</p>
<img src="/CS-everywhere/20210724/975940166/cs-everywhere-3.jpg" class="">

<h3 id="法四-四種方法裡最詳盡的電腦-筆電規格"><a href="#法四-四種方法裡最詳盡的電腦-筆電規格" class="headerlink" title="法四: 四種方法裡最詳盡的電腦/筆電規格"></a><font color=#FFA07A>法四: 四種方法裡最詳盡的電腦/筆電規格</font></h3><p>首先來到電腦上的本機，並點擊滑鼠右鍵，再點擊從上往下數第二個的”管理”，如下圖所示。</p>
<img src="/CS-everywhere/20210724/975940166/cs-everywhere-1.jpg" class="">
<p>完成上述步驟，你會看到一個”電腦管理”的視窗。<br>若是要找容量，可以去”電腦管理\存放裝置\磁碟管理”，查看實際的電腦容量。<br>另外你會發現自己的磁碟中有一個區域叫做”EFI系統磁碟分割”，可以考慮刪掉以增加儲存空間。<br>但我自己目前還沒刪除XD 聽說很難刪。<br>若是要看電腦/筆電有幾個核心(CPU)，可以去”電腦管理\系統工具\裝置管理員”裡的”處理器”查看，你可以數有幾個CPU，通常一般文書機4~8個差不多。</p>
<h2 id="為何廠商標示容量與實際不同"><a href="#為何廠商標示容量與實際不同" class="headerlink" title="為何廠商標示容量與實際不同?"></a><font color=#FFA07A>為何廠商標示容量與實際不同?</font></h2><p>終於回到我們的主題了，所以到底為何不同呢?<br>一般而言，微軟系統計算容量時是採用二進位制，但廠商標示是採用十進位制。<br>簡單說明一下二進位。我們習慣的十進位，會用科學記號表示，例如:2.38×10^3(=2.38×1000)。所以二進位，就是把底數換成2，例如2.38KB = 2.38×2^10 = (2.38×1024)bytes。<br>我們知道在計算機的世界裡，容量的單位<br>8bits = 1byte<br>Kilobyte: 2^10bytes=1024bytes<br>Megabyte: 2^10kilobytes=1048576bytes<br>Gigabyte: 2^10Megabytes=1073741824bytes(與10的9次方大約差了7個百分點)</p>
<p>假設我今天買了一台筆電，廠商標示256GB，那我現在換算成筆電裡的實際大小就會是:<br>256×(10^9)/1073741824 = 256×1000000000/1073741824 = 238.418579102，大約就是238GB。<br>256GB×93% = 238GB，可以驗證這樣換算大約相差7%。</p>
<p>白話文說明的話，你就想說買微軟系統的電腦/筆電，把廠商標示的容量大小在打個93折就是在微軟系統這個世界中的容量了。不過你會發現你的本機磁碟只有大約236GB，通常是又扣除了一些電腦系統執行上所需的容量大小。</p>
<h2 id="結論"><a href="#結論" class="headerlink" title="結論"></a><font color=#FFA07A>結論</font></h2><p>寫這篇文章之前，沒想到可以整理出四種方法可以看筆電/電腦的規格XD<br>我覺得寫學習紀錄最棒的就是可以更了解自己是否真的清楚觀念了，而且也藉由這次機會，去看看自從分割磁碟之後就沒再去過電腦管理了。</p>
]]></content>
      <categories>
        <category>生活中的計算機</category>
      </categories>
      <tags>
        <tag>CS_everywhere</tag>
      </tags>
  </entry>
  <entry>
    <title>HTML5 Tag List(progressing...)</title>
    <url>/uncategorized/20211007/3860190997/</url>
    <content><![CDATA[<p>The list below is the <font color=#C53761><strong>HTML5 tags</strong></font> I have learned so far.<br>Self-learning on <strong><a href="https://www.freecodecamp.org/learn/responsive-web-design/">freecodecamp</a></strong>, you can get there for more information.</p>
<span id="more"></span>
<h2 id="HTML5-Tag-List"><a href="#HTML5-Tag-List" class="headerlink" title="HTML5 Tag List"></a><font color=#FFA07A>HTML5 Tag List</font></h2><p><strong>Remember adding forward slash in the closing tag!</strong><br><font color=#DE3163><strong>Elements</strong></font>, <font color=#DE3163><strong>Attributes</strong></font>, <font color=#7AC073><strong>txt</strong></font></p>
<table>
<thead>
<tr>
<th>Tags</th>
<th>Discription</th>
<th>Notes</th>
</tr>
</thead>
<tbody><tr>
<td>&lt;<font color=#DE3163>H1</font>&gt;~&lt;<font color=#DE3163>H6</font>&gt;</td>
<td>Different levels of (sub)headings</td>
<td></td>
</tr>
<tr>
<td>&lt;<font color=#DE3163>p</font>&gt;…&lt;<font color=#DE3163>/p</font>&gt;</td>
<td>For paragraph text on websites</td>
<td></td>
</tr>
<tr>
<td>&lt;!- -…- -&gt;</td>
<td>Comment</td>
<td></td>
</tr>
<tr>
<td>&lt;<font color=#DE3163>main</font>&gt;…&lt;<font color=#DE3163>/main</font>&gt;</td>
<td>Main content</td>
<td>Helps search engines and other developers find the main content of your page</td>
</tr>
<tr>
<td>&lt;<font color=#DE3163>img src</font>=&quot;…&quot; <font color=#DE3163>alt</font>=&quot;&quot;&gt;</td>
<td>Add images</td>
<td><font color=#DE3163>img</font>&lt;-element; <font color=#DE3163>src,alt</font>&lt;-attribute. <font color=#DE3163>img</font> elements are self-closing. An <font color=#DE3163>alt</font> attribute is used for screen readers to improve accessibility and is displayed if the image fails to load.</td>
</tr>
<tr>
<td>&lt;<font color=#DE3163>a href</font> = &quot;<font color=#7AC073>URL</font>&quot;&gt; anchor text &lt;<font color=#DE3163>/a</font>&gt;</td>
<td>External Link</td>
<td></td>
</tr>
<tr>
<td>&lt;<font color=#DE3163>a href</font> = &quot;<font color=#7AC073>#id</font>&quot;&gt; anchor text &lt;<font color=#DE3163>/a</font>&gt;</td>
<td>Internal Link</td>
<td>Need to add the same id attribute to the element you are linking to.</td>
</tr>
<tr>
<td>&lt;<font color=#DE3163>a href</font> = &quot;<font color=#7AC073>URL</font>&quot; <font color=#DE3163>target</font>=&quot;<font color=#7AC073>_blank</font>&quot;&gt; anchor text &lt;<font color=#DE3163>/a</font>&gt;</td>
<td>Nest links within other text elements</td>
<td><font color=#DE3163>target</font> is an anchor tag attribute that specifies where to open the link. The value <font color=#7AC073>_blank</font> specifies to open the link in a new tab.</td>
</tr>
<tr>
<td>&lt;<font color=#DE3163>a href</font> = &quot;<font color=#7AC073>#</font>&quot;&gt; anchor text &lt;<font color=#DE3163>/a</font>&gt;</td>
<td>Create a dead Link</td>
<td></td>
</tr>
<tr>
<td>&lt;<font color=#DE3163>a href</font> = &quot;…&quot;&gt;&lt;<font color=#DE3163>img src</font>=&quot;<font color=#7AC073>URL</font>&quot; <font color=#DE3163>alt</font>=&quot;…&quot;&gt; &lt;<font color=#DE3163>/a</font>&gt;</td>
<td>Make elements into links by nesting them (eg.image)</td>
<td></td>
</tr>
<tr>
<td>&lt;<font color=#DE3163>ul</font>&gt;…&lt;<font color=#DE3163>/ul</font>&gt;</td>
<td>The unordered list element</td>
<td>Unordered lists start with an opening &lt;<font color=#DE3163>ul</font>&gt; element, followed by any number of &lt;<font color=#DE3163>li</font>&gt;…&lt;<font color=#DE3163>/li</font>&gt; elements.</td>
</tr>
<tr>
<td>&lt;<font color=#DE3163>ol</font>&gt;…&lt;<font color=#DE3163>/ol</font>&gt;</td>
<td>The ordered lists/numbered lists</td>
<td>Ordered lists start with an opening &lt;<font color=#DE3163>ol</font>&gt; element, followed by any number of &lt;<font color=#DE3163>li</font>&gt;…&lt;<font color=#DE3163>/li</font>&gt; elements.</td>
</tr>
<tr>
<td>&lt;<font color=#DE3163>input type</font>=&quot;…&quot; <font color=#DE3163>id</font>=&quot; &quot; <font color=#DE3163>name</font>=&quot; &quot;&gt;</td>
<td>Input</td>
<td>Several types such as <font color=#7AC073>email search tel url number range</font>, for more info: <a href="https://developer.mozilla.org/en-US/docs/Learn/Forms/HTML5_input_types">1</a> <a href="https://www.w3schools.com/html/html_form_input_types.asp">2</a></td>
</tr>
<tr>
<td>&lt;<font color=#DE3163>input type</font>=&quot;<font color=#7AC073>text</font>&quot; <font color=#DE3163>placeholder</font>=&quot;<font color=#7AC073>txt</font>&quot;&gt;</td>
<td>Displayed in your input element before your user has inputted anything</td>
<td></td>
</tr>
<tr>
<td>&lt;<font color=#DE3163>input type</font>=&quot;<font color=#7AC073>text</font>&quot; <font color=#DE3163>required</font>&gt;</td>
<td>Require specific form field (eg.text)</td>
<td>Users must complete the requirements in the field, or they cannot submit the form</td>
</tr>
<tr>
<td>&lt;<font color=#DE3163>form action</font>=&quot;<font color=#7AC073>URL</font>&quot;&gt;…&lt;<font color=#DE3163>/form</font>&gt;</td>
<td>Create a form element</td>
<td><font color=#DE3161>action</font> defines which URL the form’s information is sent to when submitted. For more info: <a href="https://htmlreference.io/forms/">click me</a></td>
</tr>
<tr>
<td>&lt;<font color=#DE3163>button type</font>=&quot;…&quot;&gt; button_text &lt;<font color=#DE3163>/button</font>&gt;</td>
<td>Add a button</td>
<td>Several types like <font color=#7AC073>button reset submit</font>, for more info: <a href="https://www.w3school.com.cn/tags/tag_button.asp">click me</a></td>
</tr>
<tr>
<td>&lt;<font color=#DE3163>label for</font>=&quot;<font color=#7AC073>choice_name</font>&quot;&gt;<br>&lt;<font color=#DE3163>input id</font>=&quot;<font color=#7AC073>choice_name</font>&quot; <font color=#DE3163>type</font>=&quot;<font color=#7AC073>radio</font>&quot; <font color=#DE3163>name</font>=&quot;<font color=#7AC073>…</font>&quot; choice_name<br>&lt;<font color=#DE3163>/label</font>&gt;</td>
<td>Create radio button (multiple choices)</td>
<td></td>
</tr>
</tbody></table>
<label for="indoor"> 
  <input id="indoor" type="radio" name="indoor-outdoor">Indoor 
</label>

<h2 id="References"><a href="#References" class="headerlink" title="References"></a><font color=#FFA07A>References</font></h2><ul>
<li><a href="https://www.freecodecamp.org/learn/responsive-web-design/">https://www.freecodecamp.org/learn/responsive-web-design/</a></li>
<li><a href="https://w3.iams.sinica.edu.tw/lab/wbtzeng/lifeinfo/html_use.htm">https://w3.iams.sinica.edu.tw/lab/wbtzeng/lifeinfo/html_use.htm</a></li>
</ul>
]]></content>
  </entry>
  <entry>
    <title>健康精靈 - python讀書會期末專案</title>
    <url>/%E4%BD%9C%E5%93%81%E9%9B%86/20220407/4089323357/</url>
    <content><![CDATA[<p>這是我在2021上半年參與的讀書會，期末時準備的團體專案。<br>關於我參與的讀書會，ccClub，如果有興趣，請按<a href="https://www.ccclub.io/">連結</a>看更多資訊。<br>在這篇文章你可以看到: 期末時製作的<font color=#C53761><strong>健康管理Linebot&lt;健康精靈&gt;</strong></font>，幫助現代人在Line上面快速紀錄飲食和運動，並且提供健康上的建議。</p>
<span id="more"></span>

<h2 id="專案介紹"><a href="#專案介紹" class="headerlink" title="專案介紹"></a><font color=#FFA07A>專案介紹</font></h2><p>利用 Python 套件(Django、Pandas、Matplotlib)，在 Line 中建立飲食運動紀錄精靈，改善人對自我健康的意識，也善用聊天機器人的優勢，透過溫馨的言語及噓寒問暖讓人不是面對生澀冰冷的聊天室，每天能滿懷開心的心情將自己的飲食與運動紀錄交給健康精靈做處理，並從回饋圖表、每日紀錄中獲得生理上健康的改善。</p>
<h2 id="專案流程圖"><a href="#專案流程圖" class="headerlink" title="專案流程圖"></a><font color=#FFA07A>專案流程圖</font></h2><img src="/%E4%BD%9C%E5%93%81%E9%9B%86/20220407/4089323357/health_fairy_dfd.jpg" class="">
<h2 id="資料庫ERD"><a href="#資料庫ERD" class="headerlink" title="資料庫ERD"></a><font color=#FFA07A>資料庫ERD</font></h2><img src="/%E4%BD%9C%E5%93%81%E9%9B%86/20220407/4089323357/health_fairy_erd.jpg" class="">
<h2 id="功能介紹"><a href="#功能介紹" class="headerlink" title="功能介紹"></a><font color=#FFA07A>功能介紹</font></h2><img src="/%E4%BD%9C%E5%93%81%E9%9B%86/20220407/4089323357/health_fairy_start1.jpg" class="">
<p><strong>加好友後第一次進入</strong>: 使用者需要”輸入個人資料” 系統會依序發送”您的身高(公尺)”、”您的體重”、”您的年齡”，待問題回答完後將資料儲存。</p>
<hr>
<img src="/%E4%BD%9C%E5%93%81%E9%9B%86/20220407/4089323357/health_fairy_func1.jpg" class="">
<p><strong>儲存運動紀錄</strong>: 使用者點擊此功能後，機器人會發送”您今天運動了嗎？”，然後使用者再輸入今天運動的項目以及時間，機器人之後就會把使用者輸入的東西存到資料庫。<br><strong>儲存飲食紀錄</strong>: 使用者點擊此功能後，機器人會發送”您今天吃甚麼”，然後使用者再輸入今天吃的品項，機器人之後就會把使用者輸入的東西存到資料庫。<br><strong>BMI/BMR</strong>: 參考食藥署提供的算式子將數值代入後回傳BMI/BMR。<br><strong>圖表繪製</strong>: 每天攝取多少大卡數進行統整，繪製長條圖、表格說明每天大卡狀況。<br><strong>營養新聞報</strong>: 每日推播一個從健康 2.0 網站的熱門新聞，供使用者閱讀。<br><strong>健康精靈</strong>: 回傳當天消耗的大卡與增加的大卡數，並附上進食與運動紀錄數值統整。</p>
<h2 id="DEMO"><a href="#DEMO" class="headerlink" title="DEMO"></a><font color=#FFA07A>DEMO</font></h2><div class="video-container"><iframe src="https://www.youtube.com/embed/d16AikNq9iY" frameborder="0" loading="lazy" allowfullscreen></iframe></div>
<h2 id="未來修正"><a href="#未來修正" class="headerlink" title="未來修正"></a><font color=#FFA07A>未來修正</font></h2><ul>
<li>回覆延遲，須再優化程式</li>
<li>可參考的食品種類數較少，可能可以多爬蟲另一個網站</li>
<li>將使用者輸入調整成更加人性化、不用制式格式</li>
</ul>
<h2 id="心得"><a href="#心得" class="headerlink" title="心得"></a><font color=#FFA07A>心得</font></h2><p>由於那時剛接觸程式不久，這個團體專案對我而言挑戰很大，不過也更培養我自學的能力。<br>而且初學者的好處就是，只要前進一小步，都會覺得很振奮。<br>之後如果有時間，在來記錄建立linebot的方法。</p>
]]></content>
      <categories>
        <category>Portfolio</category>
      </categories>
      <tags>
        <tag>python</tag>
        <tag>作品集</tag>
      </tags>
  </entry>
  <entry>
    <title>組合和觀察 Landsat8 的多波段影像</title>
    <url>/%E4%BD%9C%E5%93%81%E9%9B%86/20220407/2009873971/</url>
    <content><![CDATA[<p>這是我在地理資訊科學的其中一項作業，當時做完覺得很有趣，利用此機會紀錄一下。<br>在這篇文章裡，會看到組合 <font color=#C53761><strong>Landsat8 OLI/TIRS C2 L2</strong></font> 多波段影像並進行觀察。</p>
<span id="more"></span>
<h2 id="關於Landsat系列衛星"><a href="#關於Landsat系列衛星" class="headerlink" title="關於Landsat系列衛星"></a><font color=#FFA07A>關於Landsat系列衛星</font></h2><p>我覺得這位大大介紹的很詳細，有興趣可以點進去看看。<a href="https://www.796t.com/article.php?id=469750">Click me</a><br>更: 2022/2/10，Landsat9衛星影像開放下載了!</p>
<h2 id="下載Landsat8衛星影像"><a href="#下載Landsat8衛星影像" class="headerlink" title="下載Landsat8衛星影像"></a><font color=#FFA07A>下載Landsat8衛星影像</font></h2><p>利用USGS EarthExplorer 下載台灣的 Landsat 8 衛星影像，選擇雲量較低的影像下載資料。</p>
<ul>
<li>須先申請 <a href="https://earthexplorer.usgs.gov/">USGS EarthExplorer</a> 帳號</li>
<li>電腦上須安裝 JAVA VM</li>
<li>須安裝 <a href="https://drive.google.com/file/d/1YxR8zgqk7w4jSjxwgroChZyUbU-t-6nB/view?usp=sharing">Bulk Download Application</a> 軟體才能下載資料</li>
</ul>
<p>關於如何下載，網路上有很多相關文章，這邊就不多贅述了。<br>由於這次作業是要看台灣的衛星影像，因此在 Search Criteria 那欄選擇 Path/Row，台灣為 117/43, 117/44, 118/43, 118/44。Data set選擇 Landsat 8 OLI/TIRS C2 L2，提供多光譜波段地表反射率和熱紅外波段地表溫度產品，即多光譜資料經過了大氣校正處理。我最終下載了2021年9月29日的北台灣衛星影像，雲量在15%以下。</p>
<h2 id="組合多波段影像"><a href="#組合多波段影像" class="headerlink" title="組合多波段影像"></a><font color=#FFA07A>組合多波段影像</font></h2><p>擔心涉及版權，所以就不放操作畫面截圖，只用文字敘述。</p>
<p>建立一個 ArcGIS Pro 專案(或是其他GIS軟體)，將 Band 1-7 的tif檔加入地圖中。<br>我在這次作業中選擇觀察新北市，因此利用 Clip Raster 工具擷取新北市的衛星影像。<br>將產生的7個波段(Band 1-7)的影像組合成為一個多波段的影像(使用 Composite Bands 工具，注意 Band 的順序)。<br>接下來將不同波段嘗試放入紅色R、綠色G、藍色B頻道中。</p>
<h2 id="觀察影像"><a href="#觀察影像" class="headerlink" title="觀察影像"></a><font color=#FFA07A>觀察影像</font></h2><img src="/%E4%BD%9C%E5%93%81%E9%9B%86/20220407/2009873971/band432.jpg" class="">
<p>Band 4, 3, 2 - Natural Color Image: 最接近真實顏色之波段影像。</p>
<hr>
<img src="/%E4%BD%9C%E5%93%81%E9%9B%86/20220407/2009873971/band543.jpg" class="">
<p>Band 5, 4, 3 - Traditional Color Infrared (CIR) Image: 植被會呈現紅色。</p>
<hr>
<img src="/%E4%BD%9C%E5%93%81%E9%9B%86/20220407/2009873971/band764.jpg" class="">
<p>Band 7, 6, 4 - False Color useful for visualizing urban environments: 利於查看都市、人造物位置。</p>
<hr>
<img src="/%E4%BD%9C%E5%93%81%E9%9B%86/20220407/2009873971/band564.jpg" class="">
<p>Band 5, 6, 4 - False Color good for picking out land from water: 陸地呈現橘色或綠色，冰會呈現亮紫色，水則是藍色。(個人覺得水在此張圖接近深藍色)</p>
<hr>
<img src="/%E4%BD%9C%E5%93%81%E9%9B%86/20220407/2009873971/band753.jpg" class="">
<p>Band 7, 5, 3 - False color image with good atmospheric penetration: 與上張圖的band 5,6,4相近，不過陸地以更鮮艷的綠色表示。</p>
<hr>
<img src="/%E4%BD%9C%E5%93%81%E9%9B%86/20220407/2009873971/band652.jpg" class="">
<p>Band 6, 5, 2 - False color for agriculture: 用於辨識農作物，以鮮豔的綠色表示；非農作物的植物會以較暗的綠色呈現；非植被則以接近洋紅色表示(個人覺得非農作物在此張圖呈現灰色)。</p>
<hr>
<img src="/%E4%BD%9C%E5%93%81%E9%9B%86/20220407/2009873971/band632.jpg" class="">
<p>Band 6, 3, 2 - False color for distinguishing differences in bare earth: 以淺咖啡色用來表示沒有大片植被的地方。</p>
<hr>
<img src="/%E4%BD%9C%E5%93%81%E9%9B%86/20220407/2009873971/band571.jpg" class="">
<p>Band 5, 7, 1 - False color for vegetation and water: 植被呈現橘色，水則是藍色。</p>
<h2 id="References"><a href="#References" class="headerlink" title="References"></a><font color=#FFA07A>References</font></h2><ul>
<li><a href="https://www.796t.com/article.php?id=469750">https://www.796t.com/article.php?id=469750</a></li>
<li><a href="https://www.l3harrisgeospatial.com/Learn/Blogs/Blog-Details/ArtMID/10198/ArticleID/15691/The-Many-Band-Combinations-of-Landsat-8">https://www.l3harrisgeospatial.com/Learn/Blogs/Blog-Details/ArtMID/10198/ArticleID/15691/The-Many-Band-Combinations-of-Landsat-8</a></li>
</ul>
]]></content>
      <categories>
        <category>Portfolio</category>
      </categories>
      <tags>
        <tag>GIS</tag>
        <tag>作品集</tag>
      </tags>
  </entry>
  <entry>
    <title>利用GIS產出的地圖們</title>
    <url>/%E4%BD%9C%E5%93%81%E9%9B%86/20220407/1373889537/</url>
    <content><![CDATA[<p>在這篇文中，我想分享一些在課程中<font color=#C53761><strong>利用GIS分析後產出的地圖</strong></font>。<br>第一次接觸到GIS(Geographic Information System，地理資訊系統)，是在2021下半年修的一堂課 - 地理資訊科學。從那堂課之後，就發現地理資訊系統的應用真的非常廣泛，而ArcGIS和QGIS這兩個軟體也非常強大。<br><strong>本文在Window10 x64環境下操作，QGIS版本為QGIS DESKTOP 3.16.11，ArcGIS版本為ArcGIS Pro 2.8</strong><br><strong>擔心涉及版權，因此不放上操作過程截圖</strong></p>
<span id="more"></span>
<h2 id="台北市土壤液化潛勢圖"><a href="#台北市土壤液化潛勢圖" class="headerlink" title="台北市土壤液化潛勢圖"></a><font color=#FFA07A>台北市土壤液化潛勢圖</font></h2><p>從台灣村里界圖中篩選出台北市里界圖，並將坐標系統轉換為TWD97。<br>在<a href="https://soil.taipei/Taipei/Main/pages/index.html">台北市政府土壤液化潛勢查詢系統</a> 點選 <em>圖資下載</em> &gt; <em>液化潛勢區GeoJSON(TWD97)</em> 下載 TPLiquid_97.GeoJSON(臺北市土壤液化潛勢圖)。<br>開啟ArcGIS Pro(或是其他GIS軟體)，新增一個project專案，使用 <em>JSON to Features</em> 工具將檔案匯入geodatabase中，並將檔案加入Map中，底圖採用國土測繪圖資雲之<em>台灣通用電子地圖</em>，然後設定土壤液化潛勢分級名稱。新增一個Layout以繪製地圖。</p>
<img src="/%E4%BD%9C%E5%93%81%E9%9B%86/20220407/1373889537/TP_Liquid.jpg" class="">
<div class="pdfobject-container" data-target="./pdf/TP_Liquid.pdf" data-height="500px"></div>


<h2 id="台北市8行政區土壤液化面積統計圖表"><a href="#台北市8行政區土壤液化面積統計圖表" class="headerlink" title="台北市8行政區土壤液化面積統計圖表"></a><font color=#FFA07A>台北市8行政區土壤液化面積統計圖表</font></h2><p>延續上個專案，在同一個專案中新增一個Map，將底圖改為<a href="https://gis.sinica.edu.tw/tileserver/">中央研究院WMTS服務</a>之<em>1930-日治時期地質圖</em>，加入在上一個地圖加入的feature - TPLiquid與 Taipei_Admin_Sub (這是老師另外整理出的csv檔)。</p>
<blockquote>
<p>個人習慣: 加入資料前，都會先檢視資料內容和格式。</p>
</blockquote>
<p>設定 TP_liquid 圖層之透明度為50%，加上台北市次分區(sec_name)的名稱作為標籤(label)，篩選出   <em>萬華、大同、中正、大安、中山、松山、信義、南港</em> 共8個行政區的範圍並與 TP_liquid 進行 <strong>套疊分析(Overlay analysis)</strong> 將交集運算的結果存為 TP_liquid_AdminSub，將其屬性資料表(Attribute Table)輸出為 csv檔。<br>開啟 TP_liquid_AdminSub 之屬性表格，利用 <em>Summary Table</em> 統計各行政區中不同等級之土壤液化潛勢區之總面積。新增Layout，並繪製面積統計圖與面積統計表呈現在地圖中。</p>
<img src="/%E4%BD%9C%E5%93%81%E9%9B%86/20220407/1373889537/TP_Liquid_table.jpg" class="">
<img src="/%E4%BD%9C%E5%93%81%E9%9B%86/20220407/1373889537/TP_Liquid_chart.jpg" class="">

<h2 id="台北市文山區坡度圖"><a href="#台北市文山區坡度圖" class="headerlink" title="台北市文山區坡度圖"></a><font color=#FFA07A>台北市文山區坡度圖</font></h2><p>新增一個Map，將 台北市行政區 加入Map中，利用 <em>ASCII 3D to Feature Class</em> 工具將 Taipei20MDEM(老師給的資料) 目錄中的原始XYZ點坐標資料轉換為3D的點圖徵集(3D Point Feature Class)，然後利用 <em>Feature to Raster</em> 工具將點圖徵集轉換成 Raster 資料。可修改調色盤和顏色分級方式。<br>利用 <em>Contour</em> 工具產生10m間距等高線圖，<em>Slope</em> 工具產生坡度圖(採用百分比Percentile)， 並依據「山坡地土地可利用限度分類標準」，使用 <em>Reclassify</em> 工具，將坡度圖分類為6。<br>利用 台北市行政區 ，使用 <em>Clip Raster</em> ，將坡度圖切取出文山區的範圍，然後統計各坡度級的面積。由於無法使用calculate geometry，所以先使用 <em>Raster to Polygon</em> 轉成vector。接著在對gridcode這個屬性點擊滑鼠右鍵，選summerize。<br>利用 <em>Raster Calculator</em> 工具，將百分比轉換為用角度表示坡度。</p>
<img src="/%E4%BD%9C%E5%93%81%E9%9B%86/20220407/1373889537/slope.jpg" class="">
<ul>
<li>一級坡(淺藍)：坡度百分之五以下。</li>
<li>二級坡(洋紅)：坡度超過百分之五至百分之十五以下。</li>
<li>三級坡(南瓜黃)：坡度超過百分之十五至百分之三十以下。</li>
<li>四級坡(深藍)：坡度超過百分之三十至百分之四十以下。</li>
<li>五級坡(綠)：坡度超過百分之四十至百分之五十五以下。</li>
<li>六級坡(咖啡)：坡度超過百分之五十五。</li>
</ul>
<h2 id="分析"><a href="#分析" class="headerlink" title="分析"></a><font color=#FFA07A>分析</font></h2><p>新增一個Map，將台北市行政區、大台北捷運路線、大台北捷運站、大臺北地區消防栓清冊、便利商店資料加入Map中，並將底圖設定為<a href="https://maps.taipei/wmts/">台北市圖磚服務</a>。<br>便利超商的圖層屬性表沒有行政區的名稱，可以利用 <em>Identity (Analysis)</em> 與 台北市行政區 套疊加上行政區名稱，並從其中篩選出大安與信義行政區中的四大超商(7-11、全家、萊爾富、OK超商)。</p>
<h3 id="1-距離捷運站50公尺的範圍內消防栓數量大於4的捷運站有哪些"><a href="#1-距離捷運站50公尺的範圍內消防栓數量大於4的捷運站有哪些" class="headerlink" title="(1)距離捷運站50公尺的範圍內消防栓數量大於4的捷運站有哪些"></a><font color=#FFA07A>(1)距離捷運站50公尺的範圍內消防栓數量大於4的捷運站有哪些</font></h3><p>利用大台北捷運站去做 <em>Buffer</em> 畫出捷運站50公尺範圍，再利用剛剛buffer得到的資料與大臺北地區消防栓清冊去做 <em>Spatial Join</em> ，發現共有六個捷運站符合。</p>
<img src="/%E4%BD%9C%E5%93%81%E9%9B%86/20220407/1373889537/analysis1.jpg" class="">
<h3 id="2-以沿著捷運路線100公尺的範圍內便利商店數量進行排序，前10名的捷運路線"><a href="#2-以沿著捷運路線100公尺的範圍內便利商店數量進行排序，前10名的捷運路線" class="headerlink" title="(2)以沿著捷運路線100公尺的範圍內便利商店數量進行排序，前10名的捷運路線"></a><font color=#FFA07A>(2)以沿著捷運路線100公尺的範圍內便利商店數量進行排序，前10名的捷運路線</font></h3><p>利用大台北捷運路線去做 <em>Buffer</em> 畫出捷運站100公尺範圍，再利用剛剛buffer得到的資料與便利商店資料去做 <em>Spatial Join</em> ，可以得到結果。</p>
<img src="/%E4%BD%9C%E5%93%81%E9%9B%86/20220407/1373889537/analysis2.jpg" class="">


]]></content>
      <categories>
        <category>Portfolio</category>
      </categories>
      <tags>
        <tag>GIS</tag>
        <tag>作品集</tag>
      </tags>
  </entry>
  <entry>
    <title>點位坐標資料轉換成 Shapefile 和 KML 圖檔 (point2ShpKml)</title>
    <url>/%E4%BD%9C%E5%93%81%E9%9B%86/20220407/3753320447/</url>
    <content><![CDATA[<p>在這篇文中，記錄自己在2021年末時的其中一項作業，撰寫<font color=#C53761><strong>圖形使用介面(Graphical User Interface，GUI)，將航攝紀錄的點位坐標資料轉換成 Shapefile 和 KML 圖檔</strong></font>。</p>
<span id="more"></span>
<h2 id="資料介紹"><a href="#資料介紹" class="headerlink" title="資料介紹"></a><font color=#FFA07A>資料介紹</font></h2><p>林務局農林航空測量所 (農航所) 使用高解像力數位相機 DMC (Digital Mapping Camera) 拍攝航空照片，並紀錄每張航空照片之相關資料，包括：任務編號、照片號碼、品質、投影中心座標、拍照時間、對應基本圖圖號、相機代號等，航空攝影紀錄資料可從<a href="https://www.afasi.gov.tw/aerial-pic">農航所網站</a>下載。<br>下載一個記錄檔，裡面包含*.dbf, *.sel, *.shp, *.shx。<br>這次下載主要是為了sel檔，檔案裡的資料內容可參考<a href="https://www.afasi.gov.tw/0000043">DMC 航空攝影紀錄檔格式說明</a></p>
<p>另外，這次的程式碼也import latlon2twd.py和twd2latlon.py這兩支程式碼，參考<a href="https://blog.ez2learn.com/2009/08/15/lat-lon-to-twd97/">此網站</a>，因為不是我寫的，所以就不放上來了。</p>
<h2 id="準備工作"><a href="#準備工作" class="headerlink" title="準備工作"></a><font color=#FFA07A>準備工作</font></h2><p>下載wxPython。根據維基百科，wxPython是Python語言的GUI工具包，作為Python的擴充模組實現，包裝了wxWidgets。wxPython是跨平台的，開源的。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ pip install wxpython</span><br></pre></td></tr></table></figure>
<p>也可以利用Qt Designer的視覺化操作來設計介面。<br>相關教學: <a href="https://zhung.com.tw/article/%E7%94%A8qt-designer%E4%BE%86%E8%A8%AD%E8%A8%88pyqt-gui%E6%87%89%E7%94%A8%E7%A8%8B%E5%BC%8F%E7%95%8C%E9%9D%A2/">Click me</a></p>
<h2 id="程式碼"><a href="#程式碼" class="headerlink" title="程式碼"></a><font color=#FFA07A>程式碼</font></h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># -*- coding: big5</span></span><br><span class="line"><span class="comment"># 若程式中有使用中文，必須指明使用BIG5碼，前述的字碼定義必須在程式的第一或第二行</span></span><br><span class="line"><span class="comment"># 字碼定義的方式可參考：http://www.python.org/dev/peps/pep-0263/</span></span><br><span class="line"><span class="comment"># Python支援的字碼： http://www.python.org/doc/2.4/lib/standard-encodings.html</span></span><br><span class="line"></span><br><span class="line"><span class="string">&quot;&quot;&quot; 此程式示作為檢查航照影像是否涵蓋機敏區的程式之GUI介面 &quot;&quot;&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> os, sys</span><br><span class="line"><span class="keyword">import</span> wx</span><br><span class="line"><span class="comment"># import exifread</span></span><br><span class="line"><span class="keyword">import</span> shapefile</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> glob</span><br><span class="line"><span class="comment">#import datetime</span></span><br><span class="line"><span class="comment">#import numpy as np</span></span><br><span class="line"><span class="comment">#from skimage import io</span></span><br><span class="line"><span class="comment">#from skimage.transform import resize</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># some global variables</span></span><br><span class="line">inDir = <span class="string">&quot;&quot;</span></span><br><span class="line">currDir = os.getcwd()</span><br><span class="line">selFile = <span class="string">&quot;&quot;</span></span><br><span class="line">shpFile = <span class="string">&quot;&quot;</span></span><br><span class="line">kmlFile = <span class="string">&quot;&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> math <span class="keyword">import</span> sin, cos, tan, radians</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> latlon2twd <span class="keyword">import</span> LatLonToTWD97</span><br><span class="line"><span class="keyword">from</span> twd2latlon <span class="keyword">import</span> TMToLatLon</span><br><span class="line"><span class="keyword">from</span> math <span class="keyword">import</span> degrees,radians</span><br><span class="line"></span><br><span class="line"><span class="comment"># KML header, trailer, and template for placemark</span></span><br><span class="line">kml_header = <span class="string">&#x27;&#x27;&#x27;&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span></span><br><span class="line"><span class="string">&lt;kml xmlns=&quot;http://www.opengis.net/kml/2.2&quot;  xmlns:gx=&quot;http://www.google.com/kml/ext/2.2&quot; xmlns:kml=&quot;http://www.opengis.net/kml/2.2&quot; xmlns:atom=&quot;http://www.w3.org/2005/Atom &quot;&gt;</span></span><br><span class="line"><span class="string">&lt;Folder&gt;</span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line">place_mark = <span class="string">&#x27;&#x27;&#x27;&lt;Placemark&gt;  </span></span><br><span class="line"><span class="string">  &lt;name&gt;&#123;&#125;&lt;/name&gt;  </span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">  &lt;Point&gt;  </span></span><br><span class="line"><span class="string">    &lt;coordinates&gt;&#123;&#125;,&#123;&#125;,&#123;&#125;&lt;/coordinates&gt;  </span></span><br><span class="line"><span class="string">  &lt;/Point&gt;  </span></span><br><span class="line"><span class="string">&lt;/Placemark&gt;  </span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line">kml_trailer = <span class="string">&#x27;&#x27;&#x27;&lt;/Folder&gt;</span></span><br><span class="line"><span class="string">&lt;/kml&gt;</span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#---------------------------------------------------------------------------</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MyFrame</span>(<span class="params">wx.Frame</span>):</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span>(<span class="params">self, parent, <span class="built_in">id</span>, title</span>):</span></span><br><span class="line">        <span class="comment">#建造一個新的 Frame</span></span><br><span class="line">        wx.Frame.__init__(self, parent=<span class="literal">None</span>, <span class="built_in">id</span>=wx.ID_ANY, title=<span class="string">&quot;EXIF Reader&quot;</span>, size=(<span class="number">540</span>,<span class="number">550</span>),</span><br><span class="line">                style = wx.DEFAULT_FRAME_STYLE &amp; ~wx.MAXIMIZE_BOX ^ wx.RESIZE_BORDER)</span><br><span class="line"></span><br><span class="line">        <span class="comment">#logo_path = resource_path(&quot;nccu_logo.bmp&quot;)</span></span><br><span class="line">        <span class="comment">#self.window.iconbitmap(image_path)</span></span><br><span class="line">        ico = wx.Icon(<span class="string">&quot;nccu_logo.bmp&quot;</span>, wx.BITMAP_TYPE_ICO)</span><br><span class="line">        self.SetIcon(ico)</span><br><span class="line">                </span><br><span class="line">        <span class="comment"># 加入一個 Panel</span></span><br><span class="line">        panel = wx.Panel(self, wx.ID_ANY)</span><br><span class="line">        </span><br><span class="line">        wx.StaticText(parent=panel, label=<span class="string">&quot;輸入檔案:&quot;</span>, pos=(<span class="number">15</span>,<span class="number">10</span>))</span><br><span class="line">        self.a = wx.TextCtrl(parent=panel,pos=(<span class="number">140</span>,<span class="number">10</span>),size=(<span class="number">325</span>,<span class="number">20</span>))</span><br><span class="line">        self.btn1 = wx.Button(parent=panel,label=<span class="string">&quot;...&quot;</span>,pos=(<span class="number">480</span>,<span class="number">10</span>),size=(<span class="number">40</span>,<span class="number">20</span>))</span><br><span class="line">        self.Bind(wx.EVT_BUTTON, self.OnBtn1, self.btn1)</span><br><span class="line"></span><br><span class="line">        wx.StaticText(parent=panel, label=<span class="string">&quot;輸出檔案:&quot;</span>, pos=(<span class="number">15</span>,<span class="number">40</span>))</span><br><span class="line">        self.b = wx.TextCtrl(parent=panel,pos=(<span class="number">140</span>,<span class="number">40</span>),size=(<span class="number">325</span>,<span class="number">20</span>))</span><br><span class="line">        self.btn2 = wx.Button(parent=panel,label=<span class="string">&quot;...&quot;</span>,pos=(<span class="number">480</span>,<span class="number">40</span>),size=(<span class="number">40</span>,<span class="number">20</span>))</span><br><span class="line">        self.Bind(wx.EVT_BUTTON, self.OnBtn2, self.btn2)</span><br><span class="line"></span><br><span class="line">        self.btn3 = wx.Button(parent=panel,label=<span class="string">&quot; 清除訊息 &quot;</span>,pos=(<span class="number">15</span>,<span class="number">70</span>),size=(<span class="number">100</span>,<span class="number">20</span>))</span><br><span class="line">        self.Bind(wx.EVT_BUTTON, self.OnBtn3, self.btn3)</span><br><span class="line"></span><br><span class="line">        self.btn4 = wx.Button(parent=panel,label=<span class="string">&quot; 確定 &quot;</span>,pos=(<span class="number">460</span>,<span class="number">70</span>),size=(<span class="number">60</span>,<span class="number">20</span>))</span><br><span class="line">        self.Bind(wx.EVT_BUTTON, self.OnBtn4, self.btn4)</span><br><span class="line"></span><br><span class="line">        self.txtCtrl = wx.TextCtrl(panel, <span class="built_in">id</span>=wx.ID_ANY, style=wx.TE_MULTILINE, pos=(<span class="number">10</span>,<span class="number">110</span>), size=(<span class="number">510</span>,<span class="number">390</span>))</span><br><span class="line"></span><br><span class="line">        <span class="comment">#self.readConfigFile()</span></span><br><span class="line"><span class="comment">#            self.writeConfigFile()</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">OnBtn1</span>(<span class="params">self, evt</span>):</span></span><br><span class="line">        <span class="keyword">global</span> selFile</span><br><span class="line">        <span class="comment"># In this case we include a &quot;New directory&quot; button. DIR打開資料夾室窗。</span></span><br><span class="line">        <span class="comment">#dlg = wx.DirDialog(</span></span><br><span class="line">        <span class="comment">#    self, message=&quot;選擇輸入資料夾:&quot;,</span></span><br><span class="line">        <span class="comment">#    style=wx.DD_DEFAULT_STYLE | wx.DD_DIR_MUST_EXIST</span></span><br><span class="line">        <span class="comment">#    )</span></span><br><span class="line">                     </span><br><span class="line"><span class="comment"># Choose the output file. </span></span><br><span class="line">        dlg = wx.FileDialog(</span><br><span class="line">            self, message=<span class="string">&quot;選擇SEL資料檔:&quot;</span>,</span><br><span class="line">            defaultDir=currDir, </span><br><span class="line">            defaultFile=<span class="string">&quot;&quot;</span>,</span><br><span class="line">            wildcard=<span class="string">&quot;*.sel&quot;</span>,    <span class="comment">#欲設附檔名為csv檔</span></span><br><span class="line">            style= wx.FD_FILE_MUST_EXIST | wx.FD_OPEN <span class="comment">#開啟檔案</span></span><br><span class="line">            )</span><br><span class="line">                    <span class="comment"># If the user selects OK, then we process the dialog&#x27;s data.</span></span><br><span class="line">        <span class="comment"># This is done by getting the path data from the dialog - BEFORE</span></span><br><span class="line">        <span class="comment"># we destroy it. </span></span><br><span class="line">        <span class="keyword">if</span> dlg.ShowModal() == wx.ID_OK:</span><br><span class="line">            <span class="comment"># This returns a Python list of files that were selected.</span></span><br><span class="line">            path = dlg.GetPath()</span><br><span class="line">            self.a.SetValue(path)</span><br><span class="line">            selFile = self.a.GetValue()</span><br><span class="line">            selFile = selFile.replace(<span class="string">&#x27;\\&#x27;</span>, <span class="string">&#x27;/&#x27;</span>)</span><br><span class="line">            </span><br><span class="line">        <span class="comment"># Only destroy a dialog after you&#x27;re done with it.</span></span><br><span class="line">        dlg.Destroy()</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">OnBtn2</span>(<span class="params">self, evt</span>):</span></span><br><span class="line">        <span class="keyword">global</span> shpFile</span><br><span class="line">        </span><br><span class="line">        <span class="comment"># Choose the output file. </span></span><br><span class="line">        dlg = wx.FileDialog(</span><br><span class="line">            self, message=<span class="string">&quot;選擇輸出檔案:&quot;</span>,</span><br><span class="line">            defaultDir=currDir, </span><br><span class="line">            defaultFile=<span class="string">&quot;&quot;</span>,</span><br><span class="line">            wildcard=<span class="string">&quot;*.shp&quot;</span>,    <span class="comment">#欲設附檔名為csv檔</span></span><br><span class="line">            style= wx.FD_OVERWRITE_PROMPT | wx.FD_SAVE <span class="comment">#存檔</span></span><br><span class="line">            )</span><br><span class="line">                     </span><br><span class="line">        <span class="comment"># If the user selects OK, then we process the dialog&#x27;s data.</span></span><br><span class="line">        <span class="comment"># This is done by getting the path data from the dialog - BEFORE</span></span><br><span class="line">        <span class="comment"># we destroy it. </span></span><br><span class="line">        <span class="keyword">if</span> dlg.ShowModal() == wx.ID_OK:</span><br><span class="line">            <span class="comment"># This returns a Python list of files that were selected.</span></span><br><span class="line">            path = dlg.GetPath()</span><br><span class="line">            self.b.SetValue(path)</span><br><span class="line">            shpFile = self.b.GetValue()</span><br><span class="line">            shpFile = shpFile.replace(<span class="string">&#x27;\\&#x27;</span>, <span class="string">&#x27;/&#x27;</span>)</span><br><span class="line">            </span><br><span class="line">        <span class="comment"># Only destroy a dialog after you&#x27;re done with it.</span></span><br><span class="line">        dlg.Destroy()</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">OnBtn3</span>(<span class="params">self, evt</span>):</span></span><br><span class="line">        </span><br><span class="line">        self.txtCtrl.Clear()</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">OnBtn4</span>(<span class="params">self, evt</span>):</span></span><br><span class="line">        </span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            self.txtCtrl.WriteText(<span class="string">&#x27;輸入檔案： %s\n&#x27;</span> % selFile)</span><br><span class="line">            self.shp_generate()</span><br><span class="line">            </span><br><span class="line">            self.txtCtrl.WriteText(<span class="string">&#x27;輸出檔案： %s %s\n&#x27;</span> % (shpFile, kmlFile))</span><br><span class="line">            self.txtCtrl.WriteText(<span class="string">&#x27;成功!\n&#x27;</span>)</span><br><span class="line">        <span class="keyword">except</span>:</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&#x27;失敗!&#x27;</span>)</span><br><span class="line">    </span><br><span class="line">    <span class="comment"># def shp_generate(fileIn, fileOut):</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">shp_generate</span>(<span class="params">self</span>):</span></span><br><span class="line">        <span class="keyword">global</span> selFile, shpFile, kmlFile</span><br><span class="line">        kmlFile = shpFile[:-<span class="number">3</span>] + <span class="string">&#x27;kml&#x27;</span></span><br><span class="line">        fout = <span class="built_in">open</span>(kmlFile, <span class="string">&#x27;w&#x27;</span>, encoding=<span class="string">&#x27;utf-8&#x27;</span>)</span><br><span class="line"></span><br><span class="line">        fout.write(kml_header)</span><br><span class="line"> </span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            <span class="comment">#開啟資料檔案，設定文字編碼為 Big5</span></span><br><span class="line">            fin=<span class="built_in">open</span>(selFile, encoding=<span class="string">&#x27;big5&#x27;</span>)</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&quot;資料檔讀取成功，資料轉換中......&quot;</span>)</span><br><span class="line">        <span class="keyword">except</span>:</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&quot;輸入資料檔名錯誤!&quot;</span>)</span><br><span class="line"></span><br><span class="line">        <span class="comment">#產生一個Point的Shapefile檔，檔名為使用者所提供</span></span><br><span class="line">        shp = shapefile.Writer(shpFile, shapeType = shapefile.POINT)</span><br><span class="line"></span><br><span class="line">        <span class="comment">#新增屬性欄位(點號,橫坐標(X),縱座標(Y),正高(Z),控制點種類,測量方法,使用儀器,</span></span><br><span class="line">        <span class="comment">#測定日期(yyyymmdd),測量員,記錄者,點之記網頁,備註)</span></span><br><span class="line">        <span class="comment">#欄位格式定義請參考：https://pypi.org/project/pyshp/</span></span><br><span class="line">        <span class="comment">#</span></span><br><span class="line">        shp.field(<span class="string">&#x27;NAME&#x27;</span>,<span class="string">&#x27;C&#x27;</span>,<span class="number">20</span>) </span><br><span class="line">        shp.field(<span class="string">&#x27;X_TWD97&#x27;</span>,<span class="string">&#x27;N&#x27;</span>,<span class="number">15</span>,<span class="number">3</span>)</span><br><span class="line">        shp.field(<span class="string">&#x27;Y_TWD97&#x27;</span>,<span class="string">&#x27;N&#x27;</span>,<span class="number">15</span>,<span class="number">3</span>)</span><br><span class="line">        shp.field(<span class="string">&#x27;H_TWD97&#x27;</span>,<span class="string">&#x27;N&#x27;</span>,<span class="number">10</span>,<span class="number">3</span>)</span><br><span class="line">        shp.field(<span class="string">&#x27;X_TWD67&#x27;</span>,<span class="string">&#x27;N&#x27;</span>,<span class="number">15</span>,<span class="number">3</span>)</span><br><span class="line">        shp.field(<span class="string">&#x27;Y_TWD67&#x27;</span>,<span class="string">&#x27;N&#x27;</span>,<span class="number">15</span>,<span class="number">3</span>)</span><br><span class="line">        shp.field(<span class="string">&#x27;H_TWD67&#x27;</span>,<span class="string">&#x27;N&#x27;</span>,<span class="number">10</span>,<span class="number">3</span>)</span><br><span class="line">        shp.field(<span class="string">&#x27;AIRLINE&#x27;</span>,<span class="string">&#x27;N&#x27;</span>,<span class="number">5</span>)</span><br><span class="line">        shp.field(<span class="string">&#x27;DATE&#x27;</span>,<span class="string">&#x27;N&#x27;</span>,<span class="number">8</span>)</span><br><span class="line">        shp.field(<span class="string">&#x27;TIME&#x27;</span>,<span class="string">&#x27;N&#x27;</span>,<span class="number">4</span>)</span><br><span class="line">        shp.field(<span class="string">&#x27;SECOND&#x27;</span>,<span class="string">&#x27;N&#x27;</span>,<span class="number">5</span>,<span class="number">3</span>)</span><br><span class="line">        shp.field(<span class="string">&#x27;MAPID&#x27;</span>,<span class="string">&#x27;C&#x27;</span>,<span class="number">8</span>)</span><br><span class="line">        shp.field(<span class="string">&#x27;CameraID&#x27;</span>,<span class="string">&#x27;N&#x27;</span>,<span class="number">1</span>)</span><br><span class="line">        shp.field(<span class="string">&#x27;AIM&#x27;</span>,<span class="string">&#x27;N&#x27;</span>,<span class="number">1</span>)</span><br><span class="line">        shp.field(<span class="string">&#x27;Available&#x27;</span>,<span class="string">&#x27;C&#x27;</span>,<span class="number">1</span>)</span><br><span class="line">        shp.field(<span class="string">&#x27;heading&#x27;</span>,<span class="string">&#x27;N&#x27;</span>,<span class="number">2</span>)</span><br><span class="line"></span><br><span class="line">        </span><br><span class="line">        <span class="comment">#列出欄位的定義，以供檢查新增的欄位是否正確</span></span><br><span class="line">        <span class="built_in">print</span>(shp.fields)</span><br><span class="line">        </span><br><span class="line">        <span class="comment">#讀取第一列的檔頭，此為欄位說明，不屬於資料的一部分</span></span><br><span class="line">        first_line = fin.readline()</span><br><span class="line">        second_line = fin.readline()</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> line <span class="keyword">in</span> fin:</span><br><span class="line">            </span><br><span class="line">            <span class="comment">#line.strip() 首先去掉每一列輸入資料的結尾跳行符號</span></span><br><span class="line">            <span class="comment">#如果 len(s) == 0，表示此列為空白，可忽略之</span></span><br><span class="line">            s = line.strip()</span><br><span class="line">            <span class="keyword">if</span> <span class="built_in">len</span>(s) == <span class="number">0</span>:</span><br><span class="line">                <span class="keyword">continue</span></span><br><span class="line">        </span><br><span class="line">            <span class="comment">#s.split(&#x27;,&#x27;) 以逗號 (,) 分隔資料</span></span><br><span class="line">            <span class="comment">#每一列輸入的資料分隔後各別指派給等號左邊的變數</span></span><br><span class="line">            name1,name2,x_97,y_97,h_97,x_67,y_67,h_67,airline,date,time,sec,Map,camera,aim,available,heading,a,b,c,d,e,f,g,h,i,j,k,l = s.split( )</span><br><span class="line"></span><br><span class="line">            </span><br><span class="line"></span><br><span class="line"></span><br><span class="line">            <span class="comment">#從檔案讀進來的資料為文字格式 (string)，必須轉換為浮點數 (floating point) 才能進行運算</span></span><br><span class="line">            NAME = name1+<span class="string">&quot; &quot;</span>+name2</span><br><span class="line">            X_97=<span class="built_in">float</span>(x_97)</span><br><span class="line">            Y_97=<span class="built_in">float</span>(y_97)</span><br><span class="line">            H_97=<span class="built_in">float</span>(h_97)</span><br><span class="line">            X_67=<span class="built_in">float</span>(x_67)</span><br><span class="line">            Y_67=<span class="built_in">float</span>(y_67)</span><br><span class="line">            H_67=<span class="built_in">float</span>(h_67)</span><br><span class="line">            AIRLINE = <span class="built_in">float</span>(airline)</span><br><span class="line">            DATE=<span class="built_in">float</span>(date)</span><br><span class="line">            TIME=<span class="built_in">float</span>(time)</span><br><span class="line">            SEC=<span class="built_in">float</span>(sec)</span><br><span class="line">            CAMERA=<span class="built_in">float</span>(camera)</span><br><span class="line">            AIM=<span class="built_in">float</span>(aim)</span><br><span class="line">            HEADING=<span class="built_in">float</span>(heading)</span><br><span class="line"></span><br><span class="line">            c = TMToLatLon()</span><br><span class="line">            lat, lon = c.convert(X_97, Y_97)</span><br><span class="line"></span><br><span class="line">            </span><br><span class="line">            <span class="comment">#加入點位空間資料(坐標)以及屬性資料</span></span><br><span class="line">            shp.point(lat,lon)      <span class="comment">#空間資料</span></span><br><span class="line">            shp.record(NAME,lat,lon,H_97,X_67,Y_67,H_67,AIRLINE,DATE,TIME,SEC,Map,CAMERA,AIM,available,HEADING)    <span class="comment">#屬性資料</span></span><br><span class="line"></span><br><span class="line">            </span><br><span class="line">            fout.write(place_mark.<span class="built_in">format</span>(NAME,<span class="built_in">float</span>(lon),<span class="built_in">float</span>(lat),H_97))</span><br><span class="line">            <span class="comment"># fout.write(place_mark.format(NAME,Y_97,X_97,H_97))</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">#存成檔名為fileOut的shapefile檔</span></span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            <span class="comment">#關閉輸出的 shapefile 檔案才能確保資料寫入磁碟中</span></span><br><span class="line">            shp.close()</span><br><span class="line">            </span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&quot;Shapefile圖檔 %s 產製成功!&quot;</span> % shpFile)</span><br><span class="line">        <span class="keyword">except</span>:</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&quot;Shapefile圖檔 %s 產製失敗!&quot;</span> % shpFile)</span><br><span class="line">        </span><br><span class="line">        fout.write(kml_trailer)</span><br><span class="line">        fout.close()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="comment">#關閉輸入資料檔案    </span></span><br><span class="line">        fin.close()</span><br><span class="line"></span><br><span class="line">    </span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MyApp</span>(<span class="params">wx.App</span>):</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># wxWindows calls this method to initialize the application</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">OnInit</span>(<span class="params">self</span>):</span></span><br><span class="line"></span><br><span class="line">        <span class="comment"># Create an instance of our customized Frame class</span></span><br><span class="line">        frame = MyFrame(<span class="literal">None</span>, -<span class="number">1</span>, <span class="string">&quot;Create Worldfile&quot;</span>)</span><br><span class="line">        frame.Show(<span class="literal">True</span>)</span><br><span class="line"></span><br><span class="line">        <span class="comment"># Tell wxWindows that this is our main window</span></span><br><span class="line">        self.SetTopWindow(frame)</span><br><span class="line"></span><br><span class="line">        <span class="comment"># Return a success flag</span></span><br><span class="line">        <span class="keyword">return</span> <span class="literal">True</span></span><br><span class="line">        </span><br><span class="line"><span class="comment">#---------------------------------------------------------------------------</span></span><br><span class="line">    </span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    app = MyApp(<span class="number">0</span>)</span><br><span class="line">    app.MainLoop()</span><br></pre></td></tr></table></figure>
<h3 id="打包成exe檔"><a href="#打包成exe檔" class="headerlink" title="打包成exe檔"></a><font color=#FFA07A>打包成exe檔</font></h3><p>打開Anaconda Prompt，切換路徑到上面程式檔案所在位置。<br>接著輸入以下程式碼。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">conda install pyinstaller</span><br></pre></td></tr></table></figure>
<p>跑到一半會出現 Proceed([y]&#x2F;n)?<br>輸入 “y” 即可。<br>看到”done”即成功。<br>接著輸入:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">pyinstaller --onefile fileName</span><br></pre></td></tr></table></figure>
<p>fileName填入欲打包成exe檔之程式檔案名稱。</p>
<h2 id="測試"><a href="#測試" class="headerlink" title="測試"></a><font color=#FFA07A>測試</font></h2><p>由於我只是要檢測這支程式碼是否有成功執行，為加快速度我只取了sel檔中前100筆資料下去測試。</p>
<img src="/%E4%BD%9C%E5%93%81%E9%9B%86/20220407/3753320447/test2022.jpg" class="">
<p>先來檢視產生出的kml檔，利用google earth測試。</p>
<img src="/%E4%BD%9C%E5%93%81%E9%9B%86/20220407/3753320447/test2022kml.jpg" class="">
<p>再來檢視產生出shp檔，利用ArcGIS Pro測試。<br>由於沒有定義座標系統，使用 <em>define projection</em> 定義座標系統。</p>
<img src="/%E4%BD%9C%E5%93%81%E9%9B%86/20220407/3753320447/test2022shp.jpg" class="">
<h2 id="心得"><a href="#心得" class="headerlink" title="心得"></a><font color=#FFA07A>心得</font></h2><p>一開始以為這項作業難度不高，沒想到實際去寫的時候困難重重，如果沒有詹老師和同學的幫忙，絕對沒有辦法準時完成作業。也再度認知到自己的程式功力還是遠遠不足，尤其是debug…</p>
]]></content>
      <categories>
        <category>Portfolio</category>
      </categories>
      <tags>
        <tag>python</tag>
        <tag>作品集</tag>
      </tags>
  </entry>
  <entry>
    <title>2D Drawing in AutoCAD (Progressing)</title>
    <url>/%E4%BD%9C%E5%93%81%E9%9B%86/20220410/3979413093/</url>
    <content><![CDATA[<p>The following are practices from the course I am studying now, Computer Aided Drawing.<br>Drawing on AutoCAD is always fun and challenging though my eyes easily get tired. Hope my passion on CAD can last till the end of the semester XD</p>
<p><strong>AutoCAD version: AutoCAD 2022</strong><br><strong>The practices below are arranged from new to old</strong></p>
<span id="more"></span>
<h2 id="3D-Model-Exercise-Metal-Component"><a href="#3D-Model-Exercise-Metal-Component" class="headerlink" title="3D Model Exercise: Metal Component"></a><font color=#FFA07A>3D Model Exercise: Metal Component</font></h2><img src="/%E4%BD%9C%E5%93%81%E9%9B%86/20220410/3979413093/3D.png" class="">
<h2 id="Isometric-Exercise-Metal-Component"><a href="#Isometric-Exercise-Metal-Component" class="headerlink" title="Isometric Exercise: Metal Component"></a><font color=#FFA07A>Isometric Exercise: Metal Component</font></h2><img src="/%E4%BD%9C%E5%93%81%E9%9B%86/20220410/3979413093/isometric2.png" class="">
<h2 id="Isometric-Exercise"><a href="#Isometric-Exercise" class="headerlink" title="Isometric Exercise"></a><font color=#FFA07A>Isometric Exercise</font></h2><img src="/%E4%BD%9C%E5%93%81%E9%9B%86/20220410/3979413093/isometric1.png" class="">
<h2 id="Woring-with-FILLET-and-CHAMFER"><a href="#Woring-with-FILLET-and-CHAMFER" class="headerlink" title="Woring with FILLET and CHAMFER"></a><font color=#FFA07A>Woring with FILLET and CHAMFER</font></h2><img src="/%E4%BD%9C%E5%93%81%E9%9B%86/20220410/3979413093/filletChamfer.jpg" class="">
<h2 id="Zurish-Clock"><a href="#Zurish-Clock" class="headerlink" title="Zurish Clock"></a><font color=#FFA07A>Zurish Clock</font></h2><img src="/%E4%BD%9C%E5%93%81%E9%9B%86/20220410/3979413093/clock.jpg" class="">
<h2 id="7-Pointed-Star"><a href="#7-Pointed-Star" class="headerlink" title="7 Pointed Star"></a><font color=#FFA07A>7 Pointed Star</font></h2><img src="/%E4%BD%9C%E5%93%81%E9%9B%86/20220410/3979413093/7pointedStar.jpg" class="">

]]></content>
      <categories>
        <category>Portfolio</category>
      </categories>
      <tags>
        <tag>作品集</tag>
        <tag>AutoCAD</tag>
      </tags>
  </entry>
  <entry>
    <title>空間直角坐標系與大地坐標系變換(xyz2blh)</title>
    <url>/%E4%BD%9C%E5%93%81%E9%9B%86/20220410/127851206/</url>
    <content><![CDATA[<p>在此文章記錄<font color=#C53761><strong>空間直角坐標系與大地坐標系變換的程式碼</strong></font><br>空間直角坐標系與大地坐標系變換有 <strong>迭代法</strong> 和 <strong>直接法</strong>，兩種都會記錄。</p>
<span id="more"></span>
<h2 id="基本介紹"><a href="#基本介紹" class="headerlink" title="基本介紹"></a><font color=#FFA07A>基本介紹</font></h2><p>關於空間直角坐標系與大地坐標系變換，有興趣了解的人，可以參考<a href="https://www.itread01.com/content/1549763649.html">這個網站</a></p>
<p>另外，迭代法的大地座標精度設定到公厘級。</p>
<h2 id="迭代法程式碼"><a href="#迭代法程式碼" class="headerlink" title="迭代法程式碼"></a><font color=#FFA07A>迭代法程式碼</font></h2><p>當時寫程式碼時，因為xyz都有給定的數值了，所以沒有特別設計讓使用者輸入。<br>如果要改xyz, 在以下程式碼的6,7,8行修改數值即可。</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#xyz2blh_iterationMethod</span></span><br><span class="line"><span class="keyword">import</span> math</span><br><span class="line"><span class="comment">#list all the given values</span></span><br><span class="line">a_axis = <span class="number">6378137</span></span><br><span class="line">f = <span class="number">1</span>/<span class="number">298.257223563</span></span><br><span class="line">x = -<span class="number">2971861.980</span></span><br><span class="line">y = <span class="number">5009408.470</span></span><br><span class="line">z = <span class="number">2590568.100</span> </span><br><span class="line"></span><br><span class="line"><span class="comment">#Compute the known values including first eccentricity of ellipsoid squared(e2), L, and r</span></span><br><span class="line">b_axis = a_axis-f*a_axis</span><br><span class="line">e2 = (a_axis*a_axis-b_axis*b_axis)/(a_axis*a_axis)</span><br><span class="line">L = math.atan(y/x)*(<span class="number">180</span>/math.pi)</span><br><span class="line">r = math.sqrt(x*x+y*y)</span><br><span class="line"></span><br><span class="line"><span class="comment">#Using iteration to get unknown values</span></span><br><span class="line">B0 = math.atan(z/r)*(<span class="number">180</span>/math.pi)</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">xyz2blh</span>(<span class="params">B0</span>):</span></span><br><span class="line">    N = a_axis/math.sqrt(<span class="number">1</span>-e2*math.<span class="built_in">pow</span>(math.sin(B0*math.pi/<span class="number">180</span>),<span class="number">2</span>))</span><br><span class="line">    H = (r/math.cos(B0*math.pi/<span class="number">180</span>))-N</span><br><span class="line"></span><br><span class="line">    inner = <span class="number">1</span>/r*(z+(a_axis*e2*math.tan(B0*math.pi/<span class="number">180</span>)/</span><br><span class="line">                math.sqrt(<span class="number">1</span>+(<span class="number">1</span>-e2)*math.<span class="built_in">pow</span>(math.tan(B0*math.pi/<span class="number">180</span>),<span class="number">2</span>))))</span><br><span class="line">    B = math.atan(inner)*(<span class="number">180</span>/math.pi)</span><br><span class="line">    <span class="keyword">if</span> (B-B0) &lt; <span class="number">0.001</span>:</span><br><span class="line">        N = a_axis/math.sqrt(<span class="number">1</span>-e2*math.<span class="built_in">pow</span>(math.sin(B*math.pi/<span class="number">180</span>),<span class="number">2</span>))</span><br><span class="line">        H = (r/math.cos(B*math.pi/<span class="number">180</span>))-N</span><br><span class="line">        <span class="keyword">return</span> degree2DMS(B), degree2DMS(L), <span class="built_in">round</span>(H,<span class="number">4</span>)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">return</span> xyz2blh(B)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#turn the values into degrees, seconds, and minutes</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">degree2DMS</span>(<span class="params">deg</span>):</span></span><br><span class="line">    <span class="keyword">if</span> deg &lt;<span class="number">0</span>:</span><br><span class="line">        deg += <span class="number">180</span></span><br><span class="line">    total_sec = deg*<span class="number">3600</span></span><br><span class="line">    sec = total_sec % <span class="number">60</span></span><br><span class="line">    total_min = (total_sec - sec)/<span class="number">60</span></span><br><span class="line">    minute = total_min%<span class="number">60</span></span><br><span class="line">    degree = (total_min - minute)/<span class="number">60</span></span><br><span class="line">    result = <span class="built_in">str</span>(<span class="built_in">int</span>(degree)) + <span class="string">&#x27;°&#x27;</span> + <span class="built_in">str</span>(<span class="built_in">int</span>(minute)).zfill(<span class="number">2</span>) + <span class="string">&quot;′&quot;</span> + <span class="built_in">str</span>(<span class="built_in">round</span>(sec,<span class="number">2</span>)) + <span class="string">&#x27;&quot;&#x27;</span></span><br><span class="line">    <span class="keyword">return</span> result</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="string">f&quot;|Iteration Method|\nOriginal: (X, Y, Z) = (<span class="subst">&#123;x&#125;</span>, <span class="subst">&#123;y&#125;</span>, <span class="subst">&#123;z&#125;</span>)\nResult:   (B, L, H) = &quot;</span>,end=<span class="string">&quot;&quot;</span>)</span><br><span class="line"><span class="built_in">print</span>(xyz2blh(B0))</span><br></pre></td></tr></table></figure>
<p><strong>Result</strong></p>
<blockquote>
<p>|Iteration Method|<br>Original: (X, Y, Z) &#x3D; (-2971861.98, 5009408.47, 2590568.1)<br>Result:   (B, L, H) &#x3D; (‘24°07′15.24”‘, ‘120°40′43.66”‘, 139.0337)</p>
</blockquote>
<h2 id="直接法程式碼"><a href="#直接法程式碼" class="headerlink" title="直接法程式碼"></a><font color=#FFA07A>直接法程式碼</font></h2><p>跟迭代法一樣，由於x,y,z有給定的數值，因此也沒有設計讓使用者輸入數值。<br>如果要改x,y,z，到程式碼6,7,8行修改即可。</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">##xyz2blh_directMethod</span></span><br><span class="line"><span class="keyword">import</span> math</span><br><span class="line"><span class="comment">#list all the given values</span></span><br><span class="line">a_axis = <span class="number">6378137</span></span><br><span class="line">f = <span class="number">1</span>/<span class="number">298.257223563</span></span><br><span class="line">x = -<span class="number">2971861.980</span></span><br><span class="line">y = <span class="number">5009408.470</span></span><br><span class="line">z = <span class="number">2590568.100</span> </span><br><span class="line"></span><br><span class="line"><span class="comment">#compute values</span></span><br><span class="line">b_axis = a_axis-f*a_axis</span><br><span class="line">e2 = (a_axis*a_axis-b_axis*b_axis)/(a_axis*a_axis)</span><br><span class="line">e_2 = (a_axis*a_axis-b_axis*b_axis)/(b_axis*b_axis)</span><br><span class="line">L = math.atan(y/x)*(<span class="number">180</span>/math.pi)</span><br><span class="line">r = math.sqrt(x*x+y*y)</span><br><span class="line"></span><br><span class="line">theta = math.atan(a_axis*z/(b_axis*r))*(<span class="number">180</span>/math.pi)</span><br><span class="line"></span><br><span class="line">inner = ((z+(b_axis*e_2*math.<span class="built_in">pow</span>(math.sin(theta*math.pi/<span class="number">180</span>),<span class="number">3</span>)))/</span><br><span class="line">                (r-a_axis*e2*math.<span class="built_in">pow</span>(math.cos(theta*math.pi/<span class="number">180</span>),<span class="number">3</span>)))</span><br><span class="line">B = math.atan(inner)*(<span class="number">180</span>/math.pi)</span><br><span class="line"></span><br><span class="line">N = a_axis/math.sqrt(<span class="number">1</span>-e2*math.<span class="built_in">pow</span>(math.sin(B*math.pi/<span class="number">180</span>),<span class="number">2</span>))</span><br><span class="line">H = (r/math.cos(B*math.pi/<span class="number">180</span>))-N</span><br><span class="line"></span><br><span class="line"><span class="comment">#turn the values into degrees, seconds, and minutes</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">degree2DMS</span>(<span class="params">deg</span>):</span></span><br><span class="line">    <span class="keyword">if</span> deg &lt;<span class="number">0</span>:</span><br><span class="line">        deg += <span class="number">180</span></span><br><span class="line">    total_sec = deg*<span class="number">3600</span></span><br><span class="line">    sec = total_sec % <span class="number">60</span></span><br><span class="line">    total_min = (total_sec - sec)/<span class="number">60</span></span><br><span class="line">    minute = total_min%<span class="number">60</span></span><br><span class="line">    degree = (total_min - minute)/<span class="number">60</span></span><br><span class="line">    result = <span class="built_in">str</span>(<span class="built_in">int</span>(degree)) + <span class="string">&#x27;°&#x27;</span> + <span class="built_in">str</span>(<span class="built_in">int</span>(minute)).zfill(<span class="number">2</span>) + <span class="string">&quot;′&quot;</span> + <span class="built_in">str</span>(<span class="built_in">round</span>(sec,<span class="number">2</span>)) + <span class="string">&#x27;&quot;&#x27;</span></span><br><span class="line">    <span class="keyword">return</span> result</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="string">f&quot;|Direct Method|\nOriginal: (X, Y, Z) = (<span class="subst">&#123;x&#125;</span>, <span class="subst">&#123;y&#125;</span>, <span class="subst">&#123;z&#125;</span>)\nResult:   (B, L, H) = (<span class="subst">&#123;degree2DMS(B)&#125;</span>, <span class="subst">&#123;degree2DMS(L)&#125;</span>, <span class="subst">&#123;<span class="built_in">round</span>(H,<span class="number">4</span>)&#125;</span>)&quot;</span>,end=<span class="string">&quot;&quot;</span>)</span><br></pre></td></tr></table></figure>
<p><strong>Result</strong></p>
<blockquote>
<p>|Direct Method|<br>Original: (X, Y, Z) &#x3D; (-2971861.98, 5009408.47, 2590568.1)<br>Result:   (B, L, H) &#x3D; (24°07′15.26”, 120°40′43.66”, 139.2552)</p>
</blockquote>
]]></content>
      <categories>
        <category>Portfolio</category>
      </categories>
      <tags>
        <tag>python</tag>
        <tag>作品集</tag>
      </tags>
  </entry>
  <entry>
    <title>政大今天有卦嗎? [Java專案]</title>
    <url>/%E4%BD%9C%E5%93%81%E9%9B%86/20220618/2650474523/</url>
    <content><![CDATA[<p>這是我在2022年4月~6月製作的團體專案，一個融入政大生活的卜卦程式。<br>主程式語言為Java，連結資料庫(MySQL)，利用JavaSwing製作GUI，完成的<font color=#C53761><strong>簡易易經三錢法解卦程式</strong></font>，將易經經文轉換成較好理解的白話文，並融入政大人生活，提供政大學生感情、事業（學業）上的指引、具體建言，或搏君一笑。</p>
<span id="more"></span>
<h2 id="專案程式碼"><a href="#專案程式碼" class="headerlink" title="專案程式碼"></a><font color=#FFA07A>專案程式碼</font></h2><p>可至<a href="https://github.com/kiwi1210/JavaProjectGua">此專案GitHub頁面</a>上查看。</p>
<h2 id="三錢卜算法介紹"><a href="#三錢卜算法介紹" class="headerlink" title="三錢卜算法介紹"></a><font color=#FFA07A>三錢卜算法介紹</font></h2><p>三錢卜算法使用三個錢幣，一次擲出一個爻，六爻為一卦。由下往上紀錄卦象，擲出的第一次為最下面的一爻（初爻），然後是由下往上算的第二爻，以此類推，第六次才是最上面的一爻。擲出三個正面為老陽；一正二反為少陽；二正一反為少陰；三個皆反為老陰。<br>運用簡易三錢法，根據使用者賦予給三個硬幣正反面（共六面）的值，透過奇偶數辨識陰陽，和隨機變數模擬出的擲硬幣結果，分別推算六個爻的陰陽後，即可得出六十四卦的其中一卦作為卜算結果。</p>
<h2 id="專案優勢"><a href="#專案優勢" class="headerlink" title="專案優勢"></a><font color=#FFA07A>專案優勢</font></h2><ul>
<li>將易經經文轉換成白話文句，並融入政大生活，提供具體建言</li>
<li>提供較詳盡的卜算程序，為目前網路上所沒有</li>
<li>無接觸的算卦過程，提供給害羞、不敢到實體店面問卦的人</li>
<li>網路上已有許多塔羅、算命程式，但易經卜卦少見</li>
</ul>
<h2 id="WBS-工作分解結構"><a href="#WBS-工作分解結構" class="headerlink" title="WBS(工作分解結構)"></a><font color=#FFA07A>WBS(工作分解結構)</font></h2><img src="/%E4%BD%9C%E5%93%81%E9%9B%86/20220618/2650474523/WBS.png" class="">
<h2 id="系統demo"><a href="#系統demo" class="headerlink" title="系統demo"></a><font color=#FFA07A>系統demo</font></h2><p>在此介紹主要介面，因此登入介面和操作說明介面，這兩個介面不會在此處demo出來。</p>
<p><strong>首頁介面</strong></p>
<ul>
<li>點選評論可開啟登入介面</li>
<li>點選操作說明可開啟說明介面</li>
<li>先選擇算卦類別再點選開始算卦可開啟算卦介面</li>
<li>根據選擇的算卦類別，會在開始算卦此按鈕上出現相應顏色<img src="/%E4%BD%9C%E5%93%81%E9%9B%86/20220618/2650474523/intro.png" class="">
<img src="/%E4%BD%9C%E5%93%81%E9%9B%86/20220618/2650474523/intro1.png" class=""></li>
</ul>
<hr>
<p><strong>算卦介面</strong></p>
<ol>
<li>在三個錢幣的正反面(正面為上排的黃色；反面為下排的咖啡色)分別輸入一個正整數，共六個</li>
<li>請避免同一錢正反面奇偶相同</li>
<li>點選“生成新爻”六次，完成後自動進入解卦介面</li>
<li>若過程中需要中斷，或跳出錯誤訊息，請點選“重新再來”，並重複前面步驟1~3<img src="/%E4%BD%9C%E5%93%81%E9%9B%86/20220618/2650474523/divination1.png" class="">
<img src="/%E4%BD%9C%E5%93%81%E9%9B%86/20220618/2650474523/divination.png" class=""></li>
</ol>
<hr>
<p><strong>解卦介面</strong></p>
<ul>
<li>展示卦辭與建議</li>
<li>展示相關評論</li>
<li>點選評論可進入登入介面<img src="/%E4%BD%9C%E5%93%81%E9%9B%86/20220618/2650474523/interpret.png" class=""></li>
</ul>
<hr>
<p><strong>評論介面</strong><br>新增評論<br>1.點選新增<br>2.沿用預先設定的評論編號或輸入下一編號<br>3.輸入欲評論的卦編號<br>4.點選欲給予的分數(1~5)<br>5.輸入評論文字<br>6.點選執行<br>刪除評論<br>1.點選刪除<br>2.輸入欲刪除評論的編號<br>3.點選執行</p>
<img src="/%E4%BD%9C%E5%93%81%E9%9B%86/20220618/2650474523/comment.png" class="">
<h2 id="未來修正"><a href="#未來修正" class="headerlink" title="未來修正"></a><font color=#FFA07A>未來修正</font></h2><p>由於易經三錢卜算法的複雜，使我們花了不少時間設計和修正介面，尤其是算卦介面。<br>未來可以設計引導式操作，藉由利用彈出式視窗，在每個步驟給予使用者提示，一步一步帶領使用者進行操作。</p>
]]></content>
      <categories>
        <category>Portfolio</category>
      </categories>
      <tags>
        <tag>作品集</tag>
        <tag>Java</tag>
      </tags>
  </entry>
  <entry>
    <title>個人網站作業(暫時放置)</title>
    <url>/uncategorized/20221218/355368360/</url>
    <content><![CDATA[<p>以下是<font color=#C53761><strong>探索數位世界</strong></font>的作業，會暫時放置一陣子。</p>
<span id="more"></span>
<img src="/uncategorized/20221218/355368360/cat.jpeg" class="">
<p><strong>貓同學 貓空大學統計系</strong></p>
<ul>
<li>台北市文山區</li>
<li>+886-987-654-321</li>
<li>cat小老鼠nccu.edu.tw</li>
</ul>
<h2 id="簡介"><a href="#簡介" class="headerlink" title="簡介"></a><font color=#FFA07A>簡介</font></h2><p>超級吃貨 | ⾃學能⼒ | 勇於嘗試新事物<br>討罐罐專業+分析鏟屎官: 修讀貓空大學專業課程，品質保證<br>基礎抓老鼠能力: 是個可以獨當一面的貓貓</p>
<h2 id="專業技能"><a href="#專業技能" class="headerlink" title="專業技能"></a><font color=#FFA07A>專業技能</font></h2><p><font color=#C53761><strong>程式語言</strong></font></p>
<ul>
<li>Python: Matplotlib, NumPy, Pandas</li>
<li>Java: Interface, JDBC</li>
<li>R: ggplot, tidyverse</li>
</ul>
<p><font color=#C53761><strong>軟體&#x2F;平台操作</strong></font></p>
<ul>
<li>ArcGIS Pro basic</li>
<li>2D AutoCAD</li>
<li>SPSS</li>
</ul>
<p><font color=#C53761><strong>其他技能</strong></font></p>
<ul>
<li>熟悉Word, Excel, PowerPoint</li>
<li>TOEIC金色證書</li>
<li>貓貓語國家普考及格</li>
</ul>
<h2 id="學歷"><a href="#學歷" class="headerlink" title="學歷"></a><font color=#FFA07A>學歷</font></h2><p><strong>統計學系&#x2F;雙主修貓貓語言學系</strong><br>國⽴貓空⼤學</p>
<ul>
<li>修習貓貓語商管學程(Meow Taught Program)</li>
<li>貓貓語言學系GPA: 4.08&#x2F;4.3</li>
</ul>
<h2 id="經歷"><a href="#經歷" class="headerlink" title="經歷"></a><font color=#FFA07A>經歷</font></h2><p><strong>喵喵研究院暑期實習(Jul. 2022 - Aug. 2022)</strong></p>
<ul>
<li>參與「不同時空背景下貓咪勢力變化之過程與分析」計畫</li>
</ul>
<p><strong>喵喵雜耍社 副社長(Jul. 2021 - Jun. 2022)</strong></p>
<ul>
<li>舉辦夏季成果發表會，吸引200+觀眾</li>
</ul>
]]></content>
  </entry>
</search>
